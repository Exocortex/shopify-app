{"version":3,"file":"static/webpack/static/development/pages/index.js.eb1c7bcbf17b8e9d477c.hot-update.js","sources":["webpack:///./components/SnippetGen.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  TextContainer,\n  TextField,\n  Modal,\n} from \"@shopify/polaris\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nfunction SnippetGen(props) {\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n\n  const createSnippet = function (token) {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n    <Query\n      query={GET_TK_TOKEN}\n      onCompleted={(data) =>\n        setValue(\n          createSnippet(\n            !data.shop.metafield ? \"no token\" : data.shop.metafield.value\n          )\n        )\n      }\n    >\n      {({ loading, error, data, refetch }) => {\n        if (loading) return null;\n        if (error) return `Error! ${error}`;\n\n        return (\n          <Modal\n            open={props.active}\n            onClose={props.handleChange}\n            title={props.title}\n            primaryAction={{\n              content: \"Close\",\n              onAction: props.handleChange,\n            }}\n          >\n            <Modal.Section>\n              <TextContainer>\n                <p>\n                  Copy and paste the HTML to embed a Threekit player with the\n                  selected product. Use it on blog posts, home pages, or\n                  anywhere HTML input is supported.\n                </p>\n              </TextContainer>\n            </Modal.Section>\n            <Modal.Section>\n              <TextContainer>\n                <TextField multiline value={value} />\n              </TextContainer>\n            </Modal.Section>\n          </Modal>\n        );\n      }}\n    </Query>;\n    return `<div id=\"tkplayer-${newTitle}\" style=\"height: 500px; width: 500px;\">\n        <script>\n                window.threekitPlayer({\n                authToken: \"${token}\",\n                el: document.getElementById(\"tkplayer-${newTitle}\"),\n                assetId: '${props.assetid}',\n                showConfigurator: false,\n                showAR: ${props.ar}\n              })\n              .then(async api => {\n                 window.player = api;\n                 window.configurator = await api.getConfigurator();\n          });\n        </script>`;\n  };\n  const [value, setValue] = useState(\"\");\n\n\n  return (\n    <div>\n      <Query\n        query={GET_TK_TOKEN}\n        onCompleted={(data) =>\n          setValue(\n            createSnippet(\n              !data.shop.metafield ? \"no token\" : data.shop.metafield.value\n            )\n          )\n        }\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n\n          return (\n            <Modal\n              open={props.active}\n              onClose={props.handleChange}\n              title={props.title}\n              primaryAction={{\n                content: \"Close\",\n                onAction: props.handleChange,\n              }}\n              \n            >\n              <Modal.Section>\n                <TextContainer>\n                  <p>\n                    Copy and paste the HTML to embed a Threekit player with the\n                    selected product. Use it on blog posts, home pages, or\n                    anywhere HTML input is supported.\n                  </p>\n                </TextContainer>\n              </Modal.Section>\n              <Modal.Section>\n                <TextContainer>\n                  <TextField multiline value={value} id=\"textBox\" />\n                </TextContainer>\n              </Modal.Section>\n            </Modal>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default SnippetGen;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAFA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAoBA;AAAA;AAAA;AAKA;AACA;AACA;AAcA;AACA;AAvEA;AAAA;AAAA;AACA;AAyEA;AAGA;AACA;AAAA;AAAA;AAFA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAFA;AAJA;AAqBA;AAAA;AAAA;AAAA;AAKA;AAIA;AACA;AACA;;;;A","sourceRoot":""}