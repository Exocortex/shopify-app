{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    product(id: $id) {\\n      metafield(namespace: \\\"threekit\\\", key: \\\"assetid\\\") {\\n        value\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    product(id: $id) {\\n      metafield(namespace: \\\"threekit\\\", key: \\\"assetid\\\") {\\n        value\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    shop {\\n      metafield(namespace: \\\"threekit\\\", key: \\\"items\\\") {\\n        id\\n        value\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($ids: [ID!]!) {\\n    nodes(ids: $ids) {\\n      ... on Product {\\n        title\\n        handle\\n        descriptionHtml\\n        id\\n        images(first: 1) {\\n          edges {\\n            node {\\n              originalSrc\\n              altText\\n            }\\n          }\\n        }\\n        variants(first: 1) {\\n          edges {\\n            node {\\n              price\\n              id\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { Query, ApolloConsumer } from \"react-apollo\";\nimport { Card, ResourceList, Stack, Thumbnail, Frame } from \"@shopify/polaris\";\nimport store from \"store-js\";\nimport ThreekitForm from \"./ThreekitForm\";\nimport { Redirect } from \"@shopify/app-bridge/actions\";\nimport { Context } from \"@shopify/app-bridge-react\";\nimport { LoadingScreen } from \"../components/Loading\";\nvar GET_PRODUCTS_BY_ID = gql(_templateObject());\nvar GET_TK_PRODUCT_IDS = gql(_templateObject2());\nvar GET_TK_ASSET_ID = gql(_templateObject3());\nvar GET_META_ID = gql(_templateObject4());\n\nvar ResourceListWithProducts = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResourceListWithProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      ids: [],\n      tkId: {},\n      field: \"\",\n      active: false,\n      checked: false,\n      tkMetaFieldId: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_queryMe\", function (data) {\n      if (data.shop.metafield == null) {\n        return null;\n      } else {\n        var str = JSON.parse(data.shop.metafield.value);\n        var arr;\n        arr = str.ids.split(\",\");\n\n        _this.setState({\n          ids: arr.map(function (id) {\n            return \"gid://shopify/Product/\" + id;\n          })\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setTkID\", function (data) {\n      _this.setState({\n        tkId: data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_setTkMetafieldId\", function (data) {\n      _this.setState({\n        tkMetaFieldId: _JSON$stringify(data)\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTkAsset\", function () {\n      return __jsx(Query, {\n        query: GET_TK_ASSET_ID,\n        onCompleted: function onCompleted(data) {\n          return _this._setTkID(data);\n        }\n      }, function () {\n        return null;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleTKChange\", function (e) {\n      _this.setState({\n        field: e\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCheck\", function () {\n      !_this.state.checked ? _this.setState({\n        checked: true\n      }) : _this.setState({\n        checked: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleToggle\", function () {\n      return !_this.state.active ? _this.setState({\n        active: true\n      }) : _this.setState({\n        active: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, \"/edit-products\");\n      };\n\n      return __jsx(\"div\", null, __jsx(Frame, null, __jsx(Query, {\n        query: GET_TK_PRODUCT_IDS,\n        onCompleted: function onCompleted(data) {\n          return _this2._queryMe(data);\n        }\n      }, function () {\n        return __jsx(\"div\", null, \"\");\n      }), \" \", __jsx(Query, {\n        query: GET_META_ID,\n        onCompleted: function onCompleted(data) {\n          return _this2._setTkMetafieldId(data);\n        }\n      }, function () {\n        return __jsx(\"div\", null, \"\");\n      }), \" \", __jsx(Query, {\n        query: GET_PRODUCTS_BY_ID,\n        variables: {\n          ids: store.get(\"ids\")\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        if (loading) return __jsx(LoadingScreen, null);\n        if (error) return __jsx(\"div\", null, error.message);\n        return __jsx(Card, null, __jsx(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: \"Product\",\n            plural: \"Products\"\n          },\n          items: data.nodes,\n          renderItem: function renderItem(item) {\n            var media = __jsx(Thumbnail, {\n              source: item.images.edges[0] ? item.images.edges[0].node.originalSrc : \"\",\n              alt: item.images.edges[0] ? item.images.edges[0].node.altText : \"\"\n            });\n\n            var price = item.variants.edges[0].node.price;\n            return __jsx(ResourceList.Item, {\n              id: item.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.title)\n            }, __jsx(Stack, null, __jsx(Stack.Item, {\n              fill: true\n            }, __jsx(ThreekitForm, {\n              query: GET_TK_ASSET_ID,\n              title: item.title,\n              id: {\n                id: item.id\n              },\n              field: _this2.state.field,\n              handleTKChange: _this2.handleTKChange,\n              handleCheckChange: _this2.handleCheck,\n              checked: _this2.state.checked,\n              tkMetafieldId: _this2.state.tkMetaFieldId\n            }))));\n          }\n        }));\n      })));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/ResourceList.js"],"names":["gql","Query","ApolloConsumer","Card","ResourceList","Stack","Thumbnail","Frame","store","ThreekitForm","Redirect","Context","LoadingScreen","GET_PRODUCTS_BY_ID","GET_TK_PRODUCT_IDS","GET_TK_ASSET_ID","GET_META_ID","ResourceListWithProducts","ids","tkId","field","active","checked","tkMetaFieldId","data","shop","metafield","str","JSON","parse","value","arr","split","setState","map","id","_setTkID","e","state","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","_queryMe","_setTkMetafieldId","get","loading","error","message","singular","plural","nodes","item","media","images","edges","node","originalSrc","altText","price","variants","title","handleTKChange","handleCheck","React","Component"],"mappings":"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","sourcesContent":["import gql from \"graphql-tag\";\r\nimport { Query, ApolloConsumer } from \"react-apollo\";\r\nimport { Card, ResourceList, Stack, Thumbnail, Frame } from \"@shopify/polaris\";\r\nimport store from \"store-js\";\r\nimport ThreekitForm from \"./ThreekitForm\";\r\nimport { Redirect } from \"@shopify/app-bridge/actions\";\r\nimport { Context } from \"@shopify/app-bridge-react\";\r\nimport { LoadingScreen } from \"../components/Loading\";\r\n\r\nconst GET_PRODUCTS_BY_ID = gql`\r\n  query getProducts($ids: [ID!]!) {\r\n    nodes(ids: $ids) {\r\n      ... on Product {\r\n        title\r\n        handle\r\n        descriptionHtml\r\n        id\r\n        images(first: 1) {\r\n          edges {\r\n            node {\r\n              originalSrc\r\n              altText\r\n            }\r\n          }\r\n        }\r\n        variants(first: 1) {\r\n          edges {\r\n            node {\r\n              price\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_TK_PRODUCT_IDS = gql`\r\n  query {\r\n    shop {\r\n      metafield(namespace: \"threekit\", key: \"items\") {\r\n        id\r\n        value\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_TK_ASSET_ID = gql`\r\n  query($id: ID!) {\r\n    product(id: $id) {\r\n      metafield(namespace: \"threekit\", key: \"assetid\") {\r\n        value\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_META_ID = gql`\r\n  query($id: ID!) {\r\n    product(id: $id) {\r\n      metafield(namespace: \"threekit\", key: \"assetid\") {\r\n        value\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass ResourceListWithProducts extends React.Component {\r\n  state = {\r\n    ids: [],\r\n    tkId: {},\r\n    field: \"\",\r\n    active: false,\r\n    checked: false,\r\n    tkMetaFieldId: \"\",\r\n  };\r\n\r\n  _queryMe = (data) => {\r\n    if (data.shop.metafield == null) {\r\n      return null;\r\n    } else {\r\n      const str = JSON.parse(data.shop.metafield.value);\r\n      let arr;\r\n      arr = str.ids.split(\",\");\r\n\r\n      this.setState({\r\n        ids: arr.map((id) => \"gid://shopify/Product/\" + id),\r\n      });\r\n    }\r\n  };\r\n\r\n  _setTkID = (data) => {\r\n    this.setState({\r\n      tkId: data,\r\n    });\r\n  };\r\n\r\n  _setTkMetafieldId = (data) => {\r\n    this.setState({\r\n      tkMetaFieldId: JSON.stringify(data),\r\n    });\r\n  };\r\n\r\n  getTkAsset = () => {\r\n    return (\r\n      <Query\r\n        query={GET_TK_ASSET_ID}\r\n        onCompleted={(data) => this._setTkID(data)}\r\n      >\r\n        {() => {\r\n          return null;\r\n        }}\r\n      </Query>\r\n    );\r\n  };\r\n\r\n  handleTKChange = (e) => {\r\n    this.setState({\r\n      field: e,\r\n    });\r\n  };\r\n\r\n  handleCheck = () => {\r\n    !this.state.checked\r\n      ? this.setState({ checked: true })\r\n      : this.setState({ checked: false });\r\n  };\r\n\r\n  handleToggle = () =>\r\n    !this.state.active\r\n      ? this.setState({ active: true })\r\n      : this.setState({ active: false });\r\n\r\n  static contextType = Context;\r\n  render() {\r\n    const app = this.context;\r\n    const redirectToProduct = () => {\r\n      const redirect = Redirect.create(app);\r\n      redirect.dispatch(Redirect.Action.APP, \"/edit-products\");\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Frame>\r\n          <Query\r\n            query={GET_TK_PRODUCT_IDS}\r\n            onCompleted={(data) => this._queryMe(data)}\r\n          >\r\n            {() => {\r\n              return <div>{\"\"}</div>;\r\n            }}\r\n          </Query>{\" \"}\r\n          <Query\r\n            query={GET_META_ID}\r\n            onCompleted={(data) => this._setTkMetafieldId(data)}\r\n          >\r\n            {() => {\r\n              return <div>{\"\"}</div>;\r\n            }}\r\n          </Query>{\" \"}\r\n          <Query\r\n            query={GET_PRODUCTS_BY_ID}\r\n            variables={{ ids: store.get(\"ids\") }}\r\n          >\r\n            {({ data, loading, error }) => {\r\n              if (loading) return <LoadingScreen />;\r\n              if (error) return <div>{error.message}</div>;\r\n\r\n              return (\r\n                <Card>\r\n                  <ResourceList\r\n                    showHeader\r\n                    resourceName={{\r\n                      singular: \"Product\",\r\n                      plural: \"Products\",\r\n                    }}\r\n                    items={data.nodes}\r\n                    renderItem={(item) => {\r\n                      const media = (\r\n                        <Thumbnail\r\n                          source={\r\n                            item.images.edges[0]\r\n                              ? item.images.edges[0].node.originalSrc\r\n                              : \"\"\r\n                          }\r\n                          alt={\r\n                            item.images.edges[0]\r\n                              ? item.images.edges[0].node.altText\r\n                              : \"\"\r\n                          }\r\n                        />\r\n                      );\r\n                      const price = item.variants.edges[0].node.price;\r\n                      return (\r\n                        <ResourceList.Item\r\n                          id={item.id}\r\n                          media={media}\r\n                          accessibilityLabel={`View details for ${item.title}`}\r\n                        >\r\n                          <Stack>\r\n                            <Stack.Item fill>\r\n                              <ThreekitForm\r\n                                query={GET_TK_ASSET_ID}\r\n                                title={item.title}\r\n                                id={{ id: item.id }}\r\n                                field={this.state.field}\r\n                                handleTKChange={this.handleTKChange}\r\n                                handleCheckChange={this.handleCheck}\r\n                                checked={this.state.checked}\r\n                                tkMetafieldId={this.state.tkMetaFieldId}\r\n                              />\r\n                            </Stack.Item>\r\n                          </Stack>\r\n                        </ResourceList.Item>\r\n                      );\r\n                    }}\r\n                  />\r\n                </Card>\r\n              );\r\n            }}\r\n          </Query>\r\n        </Frame>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResourceListWithProducts;\r\n"]},"metadata":{},"sourceType":"module"}