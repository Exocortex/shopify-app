{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout, Page, TextStyle, EmptyState } from \"@shopify/polaris\";\nimport { ResourcePicker, TitleBar } from \"@shopify/app-bridge-react\";\nimport store from \"store-js\";\nimport ResourceListWithProducts from \"../components/ResourceList\";\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      hasSrc: false,\n      shop: ''\n    });\n\n    _defineProperty(this, \"initializeSrc\", () => {\n      var fetchUrl = \"/api/script_tags\";\n      var method = \"GET\";\n      fetch(fetchUrl, {\n        method: method\n      }).then(response => response.json()).then(json => {\n        if (json.data.script_tags.length > 0) {\n          console.log(\"NOTHING IN HERE\");\n          return null;\n        } else {}\n\n        console.log(json);\n      });\n    });\n\n    _defineProperty(this, \"getScripts\", () => {\n      var fetchUrl = \"/api/script_tags\";\n      var method = \"GET\";\n      fetch(fetchUrl, {\n        method: method\n      }).then(response => response.json()).then(json => console.log(json));\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const idsFromResources = resources.selection.map(product => product.id);\n      this.setState({\n        open: false\n      });\n      store.set(\"ids\", idsFromResources);\n    });\n  }\n\n  componentDidMount() {\n    this.getScripts();\n  }\n\n  render() {\n    const emptyState = !store.get(\"ids\");\n    return __jsx(Page, null, __jsx(TitleBar, {\n      primaryAction: {\n        content: \"Select products\"\n      }\n    }), __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      })\n    }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n      heading: \"Associate a Shopify product with a Threekit item.\",\n      action: {\n        content: \"Select products\",\n        onAction: () => this.setState({\n          open: true\n        })\n      },\n      image: \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\n    }, __jsx(\"p\", null, \"Select products to associate it with a Threekit item.\"))) : __jsx(ResourceListWithProducts, null));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/pages/index.js"],"names":["Layout","Page","TextStyle","EmptyState","ResourcePicker","TitleBar","store","ResourceListWithProducts","Index","React","Component","open","hasSrc","shop","fetchUrl","method","fetch","then","response","json","data","script_tags","length","console","log","resources","idsFromResources","selection","map","product","id","setState","set","componentDidMount","getScripts","render","emptyState","get","content","state","handleSelection","onAction"],"mappings":"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","sourcesContent":["import { Layout, Page, TextStyle, EmptyState } from \"@shopify/polaris\";\r\nimport { ResourcePicker, TitleBar } from \"@shopify/app-bridge-react\";\r\nimport store from \"store-js\";\r\nimport ResourceListWithProducts from \"../components/ResourceList\";\r\n\r\n\r\n\r\nclass Index extends React.Component {\r\n  state = { \r\n    open: false,\r\n    hasSrc: false,\r\n    shop: ''\r\n   };\r\n\r\n   initializeSrc = () => {\r\n    var fetchUrl = \"/api/script_tags\";\r\n    var method = \"GET\";\r\n    fetch(fetchUrl, { method: method })\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      if (json.data.script_tags.length > 0){\r\n        console.log(\"NOTHING IN HERE\")\r\n        return null\r\n      } else {\r\n\r\n      }\r\n      console.log(json)\r\n    })\r\n   }\r\n\r\n   getScripts = () => {\r\n    var fetchUrl = \"/api/script_tags\";\r\n    var method = \"GET\";\r\n    fetch(fetchUrl, { method: method })\r\n    .then(response => response.json())\r\n    .then(json => console.log(json))\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getScripts();\r\n  }\r\n\r\n  render() {\r\n    const emptyState = !store.get(\"ids\");\r\n  \r\n    return (\r\n      \r\n      <Page>\r\n        <TitleBar\r\n          primaryAction={{\r\n            content: \"Select products\"\r\n          }}\r\n        />\r\n        <ResourcePicker\r\n          resourceType=\"Product\"\r\n          showVariants={false}\r\n          open={this.state.open}\r\n          onSelection={resources => this.handleSelection(resources)}\r\n          onCancel={() => this.setState({ open: false })}\r\n        />\r\n        {emptyState ? (\r\n          <Layout>\r\n            <EmptyState\r\n              heading=\"Associate a Shopify product with a Threekit item.\"\r\n              action={{\r\n                content: \"Select products\",\r\n                onAction: () => this.setState({ open: true })\r\n              }}\r\n              image={\r\n                \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\r\n              }\r\n            >\r\n              <p>Select products to associate it with a Threekit item.</p>\r\n            </EmptyState>\r\n          </Layout>\r\n        ) : (\r\n          <ResourceListWithProducts />\r\n        )}\r\n      </Page>\r\n    );\r\n  }\r\n  handleSelection = resources => {\r\n    const idsFromResources = resources.selection.map(product => product.id);\r\n    this.setState({ open: false });\r\n    store.set(\"ids\", idsFromResources);\r\n  };\r\n}\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}