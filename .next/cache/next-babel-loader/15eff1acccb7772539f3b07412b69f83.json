{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { SkeletonPage, TextContainer, TextField, Button, Modal } from \"@shopify/polaris\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nfunction SnippetGen(props) {\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n\n  const createSnippet = function (token) {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n    return `<div id=\"tkplayer-${newTitle}\" style=\"height: 500px; width: 500px;\">\n        <script>\n                window.threekitPlayer({\n                authToken: \"${token}\",\n                el: document.getElementById(\"tkplayer-${newTitle}\"),\n                assetId: '${props.assetid}',\n                showConfigurator: false,\n                showAR: ${props.ar}\n              })\n              .then(async api => {\n                 window.player = api;\n                 window.configurator = await api.getConfigurator();\n          });\n        </script>`;\n  };\n\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  useEffect(() => {\n    setValue(createSnippet());\n  }, [setValue]);\n  return __jsx(\"div\", null, __jsx(Query, {\n    query: GET_TK_TOKEN // variables={props.id}\n    ,\n    onCompleted: data => setValue(createSnippet(!data.shop.metafield ? \"no token\" : data.shop.metafield.value))\n  }, ({\n    loading,\n    error,\n    data,\n    refetch\n  }) => {\n    if (loading) return null;\n    if (error) return `Error! ${error}`;\n    return __jsx(Modal, {\n      open: props.active,\n      onClose: props.handleChange,\n      title: props.title,\n      primaryAction: {\n        content: \"Copy to clipboard\",\n        onAction: props.handleChange\n      }\n    }, __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(\"p\", null, \"Use this piece of HTML to embed the selected item in a Threekit player. You can paste this code anywhere HTML input is supported.\", \" \"))), __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(TextField, {\n      multiline: true,\n      value: value\n    }))));\n  }));\n}\n\nexport default SnippetGen;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/SnippetGen.js"],"names":["React","useState","useEffect","SkeletonPage","TextContainer","TextField","Button","Modal","Query","Mutation","gql","SnippetGen","props","GET_TK_TOKEN","createSnippet","token","newTitle","title","replace","assetid","ar","value","setValue","data","shop","metafield","loading","error","refetch","active","handleChange","content","onAction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,KALF,QAMO,kBANP;AAOA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,YAAY,GAAGH,GAAI;;;;;;;;;GAAzB;;AAWA,QAAMI,aAAa,GAAG,UAASC,KAAT,EAAgB;AACpC,QAAIC,QAAQ,GAAGJ,KAAK,CAACK,KAAN,CAAYC,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAf;AACA,WAAQ,qBAAoBF,QAAS;;;8BAGXD,KAAM;wDACoBC,QAAS;4BACrCJ,KAAK,CAACO,OAAQ;;0BAEhBP,KAAK,CAACQ,EAAG;;;;;;kBAP/B;AAcD,GAhBD;;AAiBA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIA,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAET,YADT,CAEE;AAFF;AAGE,IAAA,WAAW,EAAEU,IAAI,IAAID,QAAQ,CAC3BR,aAAa,CACX,CAACS,IAAI,CAACC,IAAL,CAAUC,SAAX,GAAuB,UAAvB,GAAoCF,IAAI,CAACC,IAAL,CAAUC,SAAV,CAAoBJ,KAD7C,CADc;AAH/B,KASG,CAAC;AAAEK,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBJ,IAAAA,IAAlB;AAAwBK,IAAAA;AAAxB,GAAD,KAAuC;AACtC,QAAIF,OAAJ,EAAa,OAAO,IAAP;AACb,QAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AAEX,WACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAEf,KAAK,CAACiB,MADd;AAEE,MAAA,OAAO,EAAEjB,KAAK,CAACkB,YAFjB;AAGE,MAAA,KAAK,EAAElB,KAAK,CAACK,KAHf;AAIE,MAAA,aAAa,EAAE;AACbc,QAAAA,OAAO,EAAE,mBADI;AAEbC,QAAAA,QAAQ,EAAEpB,KAAK,CAACkB;AAFH;AAJjB,OASE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,aAAD,QACE,sJAGgB,GAHhB,CADF,CADF,CATF,EAkBE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,aAAD,QACE,MAAC,SAAD;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,KAAK,EAAET;AAA5B,MADF,CADF,CAlBF,CADF;AA0BD,GAvCH,CADF,CADF;AA6CD;;AAED,eAAeV,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  SkeletonPage,\n  TextContainer,\n  TextField,\n  Button,\n  Modal\n} from \"@shopify/polaris\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nfunction SnippetGen(props) {\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n\n  const createSnippet = function(token) {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n    return `<div id=\"tkplayer-${newTitle}\" style=\"height: 500px; width: 500px;\">\n        <script>\n                window.threekitPlayer({\n                authToken: \"${token}\",\n                el: document.getElementById(\"tkplayer-${newTitle}\"),\n                assetId: '${props.assetid}',\n                showConfigurator: false,\n                showAR: ${props.ar}\n              })\n              .then(async api => {\n                 window.player = api;\n                 window.configurator = await api.getConfigurator();\n          });\n        </script>`;\n  };\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    setValue(createSnippet());\n  }, [setValue]);\n\n  return (\n    <div>\n      <Query\n        query={GET_TK_TOKEN}\n        // variables={props.id}\n        onCompleted={data => setValue(\n          createSnippet(\n            !data.shop.metafield ? \"no token\" : data.shop.metafield.value\n          )\n        )}\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n\n          return (\n            <Modal\n              open={props.active}\n              onClose={props.handleChange}\n              title={props.title}\n              primaryAction={{\n                content: \"Copy to clipboard\",\n                onAction: props.handleChange\n              }}\n            >\n              <Modal.Section>\n                <TextContainer>\n                  <p>\n                    Use this piece of HTML to embed the selected item in a\n                    Threekit player. You can paste this code anywhere HTML input\n                    is supported.{\" \"}\n                  </p>\n                </TextContainer>\n              </Modal.Section>\n              <Modal.Section>\n                <TextContainer>\n                  <TextField multiline value={value} />\n                </TextContainer>\n              </Modal.Section>\n            </Modal>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default SnippetGen;\n"]},"metadata":{},"sourceType":"module"}