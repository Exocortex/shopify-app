{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { TextField, Button } from \"@shopify/polaris\";\n\nfunction TokenForm(props) {\n  const {\n    0: tkToken,\n    1: setTkToken\n  } = useState({});\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n  return __jsx(\"div\", null, __jsx(Query, {\n    query: GET_TK_TOKEN // variables={props.id}\n    ,\n    onCompleted: data => setTkToken(data)\n  }, ({\n    loading,\n    error,\n    data,\n    refetch\n  }) => {\n    if (loading) return null;\n    if (error) return `Error! ${error}`;\n    console.log(\"data\");\n    console.log(data);\n    console.log(tkToken);\n    return null;\n  }), __jsx(TextField, {\n    label: \"Threekit Token\",\n    value: !tkToken.shop ? 'No threekit token' : tkToken.shop.metafield.value // onChange={handleChange}\n    // id={data.product.id}\n    // ariaControls={data.product.id}\n    ,\n    placeholder: \"Threekit Token\",\n    connectedRight: __jsx(\"div\", null, __jsx(Button, {\n      primary: true,\n      onClick: () => console.log(\"Clicked\")\n    }, \"Save\"))\n  }));\n}\n\nexport default TokenForm;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/TokenForm.js"],"names":["React","useState","useCallback","useEffect","Query","Mutation","gql","TextField","Button","TokenForm","props","tkToken","setTkToken","GET_TK_TOKEN","data","loading","error","refetch","console","log","shop","metafield","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,kBAAlC;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBX,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMY,YAAY,GAAGP,GAAI;;;;;;;;;GAAzB;AAWA,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEO,YADT,CAEE;AAFF;AAGE,IAAA,WAAW,EAAEC,IAAI,IAAIF,UAAU,CAACE,IAAD;AAHjC,KAKG,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBF,IAAAA,IAAlB;AAAwBG,IAAAA;AAAxB,GAAD,KAAuC;AACtC,QAAIF,OAAJ,EAAa,OAAO,IAAP;AACb,QAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AACXE,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAEA,WAAO,IAAP;AACD,GAbH,CADF,EAgBE,MAAC,SAAD;AACE,IAAA,KAAK,EAAE,gBADT;AAEE,IAAA,KAAK,EAAE,CAACA,OAAO,CAACS,IAAT,GAAgB,mBAAhB,GAAsCT,OAAO,CAACS,IAAR,CAAaC,SAAb,CAAuBC,KAFtE,CAGE;AACA;AACA;AALF;AAME,IAAA,WAAW,EAAE,gBANf;AAOE,IAAA,cAAc,EACZ,mBACE,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,OAAO,EAAE,MAAMJ,OAAO,CAACC,GAAR,CAAY,SAAZ;AAA/B,cADF;AARJ,IAhBF,CADF;AAkCD;;AAED,eAAeV,SAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { TextField, Button } from \"@shopify/polaris\";\n\nfunction TokenForm(props) {\n  const [tkToken, setTkToken] = useState({});\n\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n\n  return (\n    <div>\n      <Query\n        query={GET_TK_TOKEN}\n        // variables={props.id}\n        onCompleted={data => setTkToken(data)}\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n          console.log(\"data\")\n          console.log(data)\n          console.log(tkToken)\n\n          return null;\n        }}\n      </Query>\n      <TextField\n        label={\"Threekit Token\"}\n        value={!tkToken.shop ? 'No threekit token' : tkToken.shop.metafield.value}\n        // onChange={handleChange}\n        // id={data.product.id}\n        // ariaControls={data.product.id}\n        placeholder={\"Threekit Token\"}\n        connectedRight={\n          <div>\n            <Button primary onClick={() => console.log(\"Clicked\")}>\n              Save\n            </Button>\n          </div>\n        }\n      ></TextField>\n    </div>\n  );\n}\n\nexport default TokenForm;\n"]},"metadata":{},"sourceType":"module"}