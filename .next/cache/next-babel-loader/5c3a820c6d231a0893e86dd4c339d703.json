{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { SkeletonPage, TextContainer, TextField, Button, Modal } from \"@shopify/polaris\";\n\nfunction SnippetGen(props) {\n  const createSnippet = function () {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n    return `<div id=\"tkplayer-${newTitle}\">\n        <script>\n                document.getElementById(\"tkplayer-${newTitle}\").style.height='500px';\n                document.getElementById(\"tkplayer-${newTitle}\").style.width='500px';\n                    \n                window.threekitPlayer({\n                authToken: \"{{ threekit[token] }}\",\n                el: document.getElementById(\"tkplayer-${newTitle}\"),\n                assetId: '${props.assetid}',\n                showConfigurator: false,\n                showAR: ${props.ar}\n              })\n              .then(async api => {\n                 window.player = api;\n                 window.configurator = await api.getConfigurator();\n          });\n        </script>`;\n  };\n\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  useEffect(() => {\n    setValue(createSnippet());\n  }, [setValue]);\n  console.log(createSnippet());\n  return __jsx(\"div\", null, __jsx(Modal, {\n    open: props.active,\n    onClose: props.handleChange,\n    title: props.title,\n    primaryAction: {\n      content: \"Copy to clipboard\",\n      onAction: props.handleChange\n    }\n  }, __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(\"p\", null, \"Use this piece of HTML to embed this item in a Threekit player.\"))), __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(TextField, {\n    multiline: true,\n    value: value\n  })))));\n}\n\nexport default SnippetGen;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/SnippetGen.js"],"names":["React","useState","useEffect","SkeletonPage","TextContainer","TextField","Button","Modal","SnippetGen","props","createSnippet","newTitle","title","replace","assetid","ar","value","setValue","console","log","active","handleChange","content","onAction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,KALF,QAMO,kBANP;;AAQA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,aAAa,GAAG,YAAW;AAC/B,QAAIC,QAAQ,GAAGF,KAAK,CAACG,KAAN,CAAYC,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAf;AACA,WAAQ,qBAAoBF,QAAS;;oDAEWA,QAAS;oDACTA,QAAS;;;;wDAILA,QAAS;4BACrCF,KAAK,CAACK,OAAQ;;0BAEhBL,KAAK,CAACM,EAAG;;;;;;kBAV/B;AAiBD,GAnBD;;AAoBA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,CAACO,QAAD,CAFM,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,aAAa,EAAzB;AACA,SACE,mBACE,MAAC,KAAD;AACE,IAAA,IAAI,EAAED,KAAK,CAACW,MADd;AAEE,IAAA,OAAO,EAAEX,KAAK,CAACY,YAFjB;AAGE,IAAA,KAAK,EAAEZ,KAAK,CAACG,KAHf;AAIE,IAAA,aAAa,EAAE;AACbU,MAAAA,OAAO,EAAE,mBADI;AAEbC,MAAAA,QAAQ,EAAEd,KAAK,CAACY;AAFH;AAJjB,KASE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,aAAD,QACE,mFADF,CADF,CATF,EAcE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,aAAD,QACE,MAAC,SAAD;AAAW,IAAA,SAAS,MAApB;AAAqB,IAAA,KAAK,EAAEL;AAA5B,IADF,CADF,CAdF,CADF,CADF;AAwBD;;AAED,eAAeR,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  SkeletonPage,\n  TextContainer,\n  TextField,\n  Button,\n  Modal\n} from \"@shopify/polaris\";\n\nfunction SnippetGen(props) {\n  const createSnippet = function() {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n    return `<div id=\"tkplayer-${newTitle}\">\n        <script>\n                document.getElementById(\"tkplayer-${newTitle}\").style.height='500px';\n                document.getElementById(\"tkplayer-${newTitle}\").style.width='500px';\n                    \n                window.threekitPlayer({\n                authToken: \"{{ threekit[token] }}\",\n                el: document.getElementById(\"tkplayer-${newTitle}\"),\n                assetId: '${props.assetid}',\n                showConfigurator: false,\n                showAR: ${props.ar}\n              })\n              .then(async api => {\n                 window.player = api;\n                 window.configurator = await api.getConfigurator();\n          });\n        </script>`;\n  };\n  const [value, setValue] = useState(\"\");\n\n  useEffect(() => {\n    setValue(createSnippet());\n  }, [setValue]);\n  console.log(createSnippet());\n  return (\n    <div>\n      <Modal\n        open={props.active}\n        onClose={props.handleChange}\n        title={props.title}\n        primaryAction={{\n          content: \"Copy to clipboard\",\n          onAction: props.handleChange\n        }}\n      >\n        <Modal.Section>\n          <TextContainer>\n            <p>Use this piece of HTML to embed this item in a Threekit player.</p>\n          </TextContainer>\n        </Modal.Section>\n        <Modal.Section>\n          <TextContainer>\n            <TextField multiline value={value} />\n          </TextContainer>\n        </Modal.Section>\n      </Modal>\n    </div>\n  );\n}\n\nexport default SnippetGen;\n"]},"metadata":{},"sourceType":"module"}