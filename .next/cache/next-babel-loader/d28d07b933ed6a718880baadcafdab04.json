{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { TextField, Button, Toast, Frame } from \"@shopify/polaris\";\nimport { LoadingText } from \"../components/Loading\";\n\nfunction TokenForm(props) {\n  const {\n    0: tkToken,\n    1: setTkToken\n  } = useState(\"No Threekit ID\");\n  const {\n    0: isSaved,\n    1: setIsSaved\n  } = useState(false);\n\n  const makeShopMetafield = val => {\n    var fetchUrl = \"/api/makeMeta/\" + val;\n    var method = \"GET\";\n    fetch(fetchUrl, {\n      method: method\n    }).then(response => response.json()).then(json => {\n      setTkToken(json.data.metafield.value);\n      setIsSaved(true);\n    });\n  };\n\n  const updateShopMetafield = (id, val) => {\n    var fetchUrl = `/api/insertMeta/${id}/${val}`;\n    var method = \"GET\";\n    fetch(fetchUrl, {\n      method: method\n    }).then(response => response.json()).then(json => {\n      setTkToken(json.data.metafield.value);\n      setIsSaved(true);\n    });\n  }; // const handleSubmit = (data, id, val) => {\n  //   !data ? makeShopMetafield(val) : updateShopMetafield(id, val);\n  // };\n\n\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n  const handleChange = useCallback(newValue => setTkToken(newValue), []);\n  return __jsx(\"div\", null, !isSaved ? __jsx(\"div\", null) : __jsx(Frame, null, __jsx(Toast, {\n    content: \"Saved\",\n    onDismiss: () => setIsSaved(false)\n  })), __jsx(Query, {\n    query: GET_TK_TOKEN // variables={props.id}\n    ,\n    onCompleted: data => setTkToken(data)\n  }, ({\n    loading,\n    error,\n    data,\n    refetch\n  }) => {\n    if (loading) return __jsx(LoadingText, null);\n    if (error) return `Error! ${error}`;\n    return __jsx(TextField, {\n      label: \"Threekit Token\",\n      value: tkToken,\n      onChange: handleChange //   onFocus={() =>\n      //     setTkToken(\n      //       !data.shop.metafield\n      //         ? \"No Threekit Token\"\n      //         : data.shop.metafield.value\n      //     )\n      //   }\n      // id={data.product.id}\n      // ariaControls={data.product.id}\n      ,\n      placeholder: !data.shop.metafield ? \"No Threekit Token\" : data.shop.metafield.value,\n      connectedRight: __jsx(\"div\", null, __jsx(Button, {\n        primary: true,\n        onClick: () => !data.shop.metafield ? makeShopMetafield(tkToken) : updateShopMetafield(data.shop.metafield.id.split(\"Metafield/\")[1], tkToken)\n      }, \"Save\"))\n    });\n  }));\n}\n\nexport default TokenForm;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/TokenForm.js"],"names":["React","useState","useCallback","useEffect","Query","Mutation","gql","TextField","Button","Toast","Frame","LoadingText","TokenForm","props","tkToken","setTkToken","isSaved","setIsSaved","makeShopMetafield","val","fetchUrl","method","fetch","then","response","json","data","metafield","value","updateShopMetafield","id","GET_TK_TOKEN","handleChange","newValue","loading","error","refetch","shop","split"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport { TextField, Button, Toast, Frame } from \"@shopify/polaris\";\nimport { LoadingText } from \"../components/Loading\";\n\nfunction TokenForm(props) {\n  const [tkToken, setTkToken] = useState(\"No Threekit ID\");\n  const [isSaved, setIsSaved] = useState(false);\n\n  const makeShopMetafield = val => {\n    var fetchUrl = \"/api/makeMeta/\" + val;\n    var method = \"GET\";\n\n    fetch(fetchUrl, { method: method })\n      .then(response => response.json())\n      .then(json => {\n        setTkToken(json.data.metafield.value);\n        setIsSaved(true);\n      });\n  };\n\n  const updateShopMetafield = (id, val) => {\n    var fetchUrl = `/api/insertMeta/${id}/${val}`;\n    var method = \"GET\";\n    fetch(fetchUrl, { method: method })\n      .then(response => response.json())\n      .then(json => {\n        setTkToken(json.data.metafield.value);\n        setIsSaved(true);\n      });\n  };\n\n\n\n  // const handleSubmit = (data, id, val) => {\n  //   !data ? makeShopMetafield(val) : updateShopMetafield(id, val);\n  // };\n\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n\n  const handleChange = useCallback(newValue => setTkToken(newValue), []);\n  return (\n    <div>\n      {!isSaved ? (\n        <div></div>\n      ) : (\n        <Frame>\n          <Toast content=\"Saved\" onDismiss={() => setIsSaved(false)}></Toast>\n        </Frame>\n      )}\n      <Query\n        query={GET_TK_TOKEN}\n        // variables={props.id}\n        onCompleted={data => setTkToken(data)}\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return <LoadingText/>;\n          if (error) return `Error! ${error}`;\n\n          return (\n            <TextField\n              label={\"Threekit Token\"}\n              value={tkToken}\n              onChange={handleChange}\n              //   onFocus={() =>\n              //     setTkToken(\n              //       !data.shop.metafield\n              //         ? \"No Threekit Token\"\n              //         : data.shop.metafield.value\n              //     )\n              //   }\n              // id={data.product.id}\n              // ariaControls={data.product.id}\n              placeholder={\n                !data.shop.metafield\n                  ? \"No Threekit Token\"\n                  : data.shop.metafield.value\n              }\n              connectedRight={\n                <div>\n                  <Button\n                    primary\n                    onClick={() =>\n                      !data.shop.metafield\n                        ? makeShopMetafield(tkToken)\n                        : updateShopMetafield(\n                            data.shop.metafield.id.split(\"Metafield/\")[1],\n                            tkToken\n                          )\n                    }\n                  >\n                    Save\n                  </Button>\n                </div>\n              }\n            ></TextField>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default TokenForm;\n"]},"metadata":{},"sourceType":"module"}