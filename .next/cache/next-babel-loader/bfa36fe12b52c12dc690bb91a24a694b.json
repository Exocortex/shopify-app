{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { SkeletonPage, TextContainer, TextField, Button, Modal } from \"@shopify/polaris\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nfunction SnippetGen(props) {\n  const GET_META_ID = gql`\n  query($id: ID!) {\n    product(id: $id) {\n      metafield(namespace: \"threekit\", key: \"assetid\") {\n        value\n        id\n      }\n    }\n  }\n`;\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `; // `<div id=\"tkplayer-${newTitle}\" style=\"height: 500px; width: 500px;\">\n  // <script>\n  //         window.threekitPlayer({\n  //         authToken: \"${token}\",\n  //         el: document.getElementById(\"tkplayer-${newTitle}\"),\n  //         assetId: '${props.assetid}',\n  //         showConfigurator: false,\n  //         showAR: ${props.ar}\n  //       })\n  //       .then(async api => {\n  //          window.player = api;\n  //          window.configurator = await api.getConfigurator();\n  //   });\n  // </script>`\n\n  const createSnippet = function (token) {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n\n    __jsx(Query, {\n      query: GET_META_ID // variables={props.id}\n      ,\n      onCompleted: () => console.log(\"DATAAAAA\" + JSON.stringify(data))\n    }, ({\n      loading,\n      error,\n      data,\n      refetch\n    }) => {\n      if (loading) return null;\n      if (error) return `Error! ${error}`;\n      return __jsx(\"p\", null, \"Done\");\n    });\n  };\n\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\"); // useEffect(() => {\n  //   setValue(createSnippet());\n  // }, [setValue]);\n\n  return __jsx(\"div\", null, __jsx(Query, {\n    query: GET_TK_TOKEN // variables={props.id}\n    ,\n    onCompleted: data => setValue(createSnippet(!data.shop.metafield ? \"no token\" : data.shop.metafield.value))\n  }, ({\n    loading,\n    error,\n    data,\n    refetch\n  }) => {\n    if (loading) return null;\n    if (error) return `Error! ${error}`;\n    return __jsx(Modal, {\n      open: props.active,\n      onClose: props.handleChange,\n      title: props.title,\n      primaryAction: {\n        content: \"Copy to clipboard\",\n        onAction: props.handleChange\n      }\n    }, __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(\"p\", null, \"Copy and paste the HTML to embed a Threekit player with the selected product. Use it on blog posts, home pages, or anywhere HTML input is supported.\"))), __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(TextField, {\n      multiline: true,\n      value: value\n    }))));\n  }));\n}\n\nexport default SnippetGen;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/SnippetGen.js"],"names":["React","useState","useEffect","SkeletonPage","TextContainer","TextField","Button","Modal","Query","Mutation","gql","SnippetGen","props","GET_META_ID","GET_TK_TOKEN","createSnippet","token","newTitle","title","replace","console","log","JSON","stringify","data","loading","error","refetch","value","setValue","shop","metafield","active","handleChange","content","onAction"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,KALF,QAMO,kBANP;AAOA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAMC,WAAW,GAAGH,GAAI;;;;;;;;;CAAxB;AAUA,QAAMI,YAAY,GAAGJ,GAAI;;;;;;;;;GAAzB,CAXyB,CAsBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMK,aAAa,GAAG,UAASC,KAAT,EAAgB;AACpC,QAAIC,QAAQ,GAAGL,KAAK,CAACM,KAAN,CAAYC,OAAZ,CAAoB,KAApB,EAA2B,EAA3B,CAAf;;AACA,UAAC,KAAD;AACA,MAAA,KAAK,EAAEN,WADP,CAEA;AAFA;AAGA,MAAA,WAAW,EAAE,MAAMO,OAAO,CAACC,GAAR,CAAY,aAAaC,IAAI,CAACC,SAAL,CAAeC,IAAf,CAAzB;AAHnB,OAKC,CAAC;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBF,MAAAA,IAAlB;AAAwBG,MAAAA;AAAxB,KAAD,KAAuC;AACtC,UAAIF,OAAJ,EAAa,OAAO,IAAP;AACb,UAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AAEX,aAAQ,wBAAR;AACD,KAVD;AAYD,GAdD;;AAgBA,QAAM;AAAA,OAACE,KAAD;AAAA,OAAQC;AAAR,MAAoB5B,QAAQ,CAAC,EAAD,CAAlC,CApDyB,CAsDzB;AACA;AACA;;AAEA,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEa,YADT,CAEE;AAFF;AAGE,IAAA,WAAW,EAAEU,IAAI,IAAIK,QAAQ,CAC3Bd,aAAa,CACX,CAACS,IAAI,CAACM,IAAL,CAAUC,SAAX,GAAuB,UAAvB,GAAoCP,IAAI,CAACM,IAAL,CAAUC,SAAV,CAAoBH,KAD7C,CADc;AAH/B,KASG,CAAC;AAAEH,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBF,IAAAA,IAAlB;AAAwBG,IAAAA;AAAxB,GAAD,KAAuC;AACtC,QAAIF,OAAJ,EAAa,OAAO,IAAP;AACb,QAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AAEX,WACE,MAAC,KAAD;AACE,MAAA,IAAI,EAAEd,KAAK,CAACoB,MADd;AAEE,MAAA,OAAO,EAAEpB,KAAK,CAACqB,YAFjB;AAGE,MAAA,KAAK,EAAErB,KAAK,CAACM,KAHf;AAIE,MAAA,aAAa,EAAE;AACbgB,QAAAA,OAAO,EAAE,mBADI;AAEbC,QAAAA,QAAQ,EAAEvB,KAAK,CAACqB;AAFH;AAJjB,OASE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,aAAD,QACE,wKADF,CADF,CATF,EAgBE,MAAC,KAAD,CAAO,OAAP,QACE,MAAC,aAAD,QACE,MAAC,SAAD;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,KAAK,EAAEL;AAA5B,MADF,CADF,CAhBF,CADF;AAwBD,GArCH,CADF,CADF;AA2CD;;AAED,eAAejB,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  SkeletonPage,\n  TextContainer,\n  TextField,\n  Button,\n  Modal\n} from \"@shopify/polaris\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nfunction SnippetGen(props) {\n  const GET_META_ID = gql`\n  query($id: ID!) {\n    product(id: $id) {\n      metafield(namespace: \"threekit\", key: \"assetid\") {\n        value\n        id\n      }\n    }\n  }\n`;\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n\n  // `<div id=\"tkplayer-${newTitle}\" style=\"height: 500px; width: 500px;\">\n  // <script>\n  //         window.threekitPlayer({\n  //         authToken: \"${token}\",\n  //         el: document.getElementById(\"tkplayer-${newTitle}\"),\n  //         assetId: '${props.assetid}',\n  //         showConfigurator: false,\n  //         showAR: ${props.ar}\n  //       })\n  //       .then(async api => {\n  //          window.player = api;\n  //          window.configurator = await api.getConfigurator();\n  //   });\n  // </script>`\n  const createSnippet = function(token) {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n    <Query\n    query={GET_META_ID}\n    // variables={props.id}\n    onCompleted={() => console.log(\"DATAAAAA\" + JSON.stringify(data))}\n  >\n    {({ loading, error, data, refetch }) => {\n      if (loading) return null;\n      if (error) return `Error! ${error}`;\n\n      return (<p>Done</p>);\n    }}\n  </Query>\n  }\n\n  const [value, setValue] = useState(\"\");\n\n  // useEffect(() => {\n  //   setValue(createSnippet());\n  // }, [setValue]);\n\n  return (\n    <div>\n      <Query\n        query={GET_TK_TOKEN}\n        // variables={props.id}\n        onCompleted={data => setValue(\n          createSnippet(\n            !data.shop.metafield ? \"no token\" : data.shop.metafield.value\n          )\n        )}\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n\n          return (\n            <Modal\n              open={props.active}\n              onClose={props.handleChange}\n              title={props.title}\n              primaryAction={{\n                content: \"Copy to clipboard\",\n                onAction: props.handleChange\n              }}\n            >\n              <Modal.Section>\n                <TextContainer>\n                  <p>\n                    Copy and paste the HTML to embed a Threekit player with the selected product. Use it on blog posts, home pages, or anywhere HTML input is supported. \n                  </p>\n                </TextContainer>\n              </Modal.Section>\n              <Modal.Section>\n                <TextContainer>\n                  <TextField multiline value={value} />\n                </TextContainer>\n              </Modal.Section>\n            </Modal>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default SnippetGen;\n"]},"metadata":{},"sourceType":"module"}