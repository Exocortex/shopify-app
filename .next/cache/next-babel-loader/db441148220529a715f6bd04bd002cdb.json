{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: ProductInput!) {\\n    productUpdate(input: $input) {\\n      product {\\n        metafields(first: 100) {\\n          edges {\\n            node {\\n              id\\n              namespace\\n              key\\n              value\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast } from '@shopify/polaris';\nimport store from 'store-js';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nvar UPDATE_PRICE = gql(_templateObject());\n\nvar EditProduct = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  function EditProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      discount: '',\n      price: '',\n      variantId: '',\n      showToast: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get('item');\n      console.log(item);\n      var price = item.variants.edges[0].node.price;\n      var variantId = item.id;\n      var discounter = price * 0.1;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return (price - discounter).toFixed(2);\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        discount: this.itemToBeConsumed()\n      });\n      console.log('variant id: ', this.state.variantId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          price = _this$state.price,\n          discount = _this$state.discount,\n          variantId = _this$state.variantId;\n      return __jsx(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n\n        var showError = error && __jsx(Banner, {\n          status: \"critical\"\n        }, error.message);\n\n        var showToast = data && data.productVariantUpdate && __jsx(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n\n        return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, showToast, __jsx(Layout.Section, null, showError), __jsx(Layout.Section, null, __jsx(DisplayText, {\n          size: \"large\"\n        }, name), __jsx(Form, null, __jsx(Card, {\n          sectioned: true\n        }, __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n          prefix: \"$\",\n          value: price,\n          disabled: true,\n          label: \"Original price\",\n          type: \"price\"\n        }), __jsx(TextField, {\n          prefix: \"$\",\n          value: discount,\n          onChange: _this2.handleChange('discount'),\n          label: \"Discounted price\",\n          type: \"discount\"\n        })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n          primaryAction: [{\n            content: 'Save',\n            onAction: function onAction() {\n              var productVariableInput = {\n                id: variantId,\n                'metafields': [{\n                  'namespace': 'threekit',\n                  'key': 'assetid',\n                  'value': discount,\n                  'valueType': \"STRING\"\n                }]\n              };\n              handleSubmit({\n                variables: {\n                  input: productVariableInput\n                }\n              });\n            }\n          }],\n          secondaryActions: [{\n            content: 'Remove discount'\n          }]\n        }))))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","store","gql","Mutation","UPDATE_PRICE","EditProduct","discount","price","variantId","showToast","field","value","setState","item","get","console","log","variants","edges","node","id","discounter","toFixed","itemToBeConsumed","state","name","handleSubmit","error","data","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","variables","input","React","Component"],"mappings":"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","sourcesContent":["import {\r\n    Banner,\r\n    Card,\r\n    DisplayText,\r\n    Form,\r\n    FormLayout,\r\n    Frame,\r\n    Layout,\r\n    Page,\r\n    PageActions,\r\n    TextField,\r\n    Toast,\r\n  } from '@shopify/polaris';\r\n  import store from 'store-js';\r\n  import gql from 'graphql-tag';\r\n  import { Mutation } from 'react-apollo';\r\n  \r\n  const UPDATE_PRICE = gql`\r\n  mutation($input: ProductInput!) {\r\n    productUpdate(input: $input) {\r\n      product {\r\n        metafields(first: 100) {\r\n          edges {\r\n            node {\r\n              id\r\n              namespace\r\n              key\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  `;\r\n  \r\n  class EditProduct extends React.Component {\r\n    state = {\r\n      discount: '',\r\n      price: '',\r\n      variantId: '',\r\n      showToast: false,\r\n    };\r\n  \r\n    componentDidMount() {\r\n      this.setState({ discount: this.itemToBeConsumed() });\r\n      console.log('variant id: ', this.state.variantId)\r\n    }\r\n  \r\n    render() {\r\n      const { name, price, discount, variantId } = this.state;\r\n      return (\r\n        <Mutation\r\n          mutation={UPDATE_PRICE}\r\n        >\r\n          {(handleSubmit, { error, data }) => {\r\n            const showError = error && (\r\n              <Banner status=\"critical\">{error.message}</Banner>\r\n            );\r\n            const showToast = data && data.productVariantUpdate && (\r\n              <Toast\r\n                content=\"Sucessfully updated\"\r\n                onDismiss={() => this.setState({ showToast: false })}\r\n              />\r\n            );\r\n            return (\r\n              <Frame>\r\n                <Page>\r\n                  <Layout>\r\n                    {showToast}\r\n                    <Layout.Section>\r\n                      {showError}\r\n                    </Layout.Section>\r\n                    <Layout.Section>\r\n                      <DisplayText size=\"large\">{name}</DisplayText>\r\n                      <Form>\r\n                        <Card sectioned>\r\n                          <FormLayout>\r\n                            <FormLayout.Group>\r\n                              <TextField\r\n                                prefix=\"$\"\r\n                                value={price}\r\n                                disabled\r\n                                label=\"Original price\"\r\n                                type=\"price\"\r\n                              />\r\n                              <TextField\r\n                                prefix=\"$\"\r\n                                value={discount}\r\n                                onChange={this.handleChange('discount')}\r\n                                label=\"Discounted price\"\r\n                                type=\"discount\"\r\n                              />\r\n                            </FormLayout.Group>\r\n                            <p>\r\n                              This sale price will expire in two weeks\r\n                          </p>\r\n                          </FormLayout>\r\n                        </Card>\r\n                        <PageActions\r\n                          primaryAction={[\r\n                            {\r\n                              content: 'Save',\r\n                              onAction: () => {\r\n                                const productVariableInput = {\r\n                                  id: variantId,\r\n                                  'metafields': [\r\n                                    {\r\n                                      'namespace': 'threekit',\r\n                                      'key': 'assetid',\r\n                                      'value': discount,\r\n                                      'valueType': \"STRING\"\r\n                                    }\r\n                                  ]\r\n                                };\r\n                                handleSubmit({\r\n                                  variables: { input: productVariableInput },\r\n                                });\r\n                              },\r\n                            },\r\n                          ]}\r\n                          secondaryActions={[\r\n                            {\r\n                              content: 'Remove discount',\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Form>\r\n                    </Layout.Section>\r\n                  </Layout>\r\n                </Page>\r\n              </Frame>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      );\r\n    }\r\n  \r\n    handleChange = (field) => {\r\n      return (value) => this.setState({ [field]: value });\r\n    };\r\n  \r\n    itemToBeConsumed = () => {\r\n      const item = store.get('item');\r\n      console.log(item)\r\n\r\n      const price = item.variants.edges[0].node.price;\r\n      const variantId = item.id;\r\n      const discounter = price * 0.1;\r\n      this.setState({ price, variantId });\r\n      return (price - discounter).toFixed(2);\r\n    };\r\n  }\r\n  \r\n  export default EditProduct;"]},"metadata":{},"sourceType":"module"}