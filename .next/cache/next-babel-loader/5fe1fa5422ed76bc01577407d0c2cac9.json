{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { TextField, Card, Stack, TextStyle, Checkbox } from \"@shopify/polaris\";\n\nfunction ThreekitForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  var _useState = useState(false),\n      checked = _useState[0],\n      setChecked = _useState[1];\n\n  var handleChange = useCallback(function (newChecked) {\n    return setChecked(newChecked);\n  }, []);\n  return __jsx(\"div\", null, __jsx(Query, {\n    query: props.query,\n    variables: props.id // skip={!breed}\n\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data,\n        refetch = _ref.refetch;\n    if (loading) return null;\n    if (error) return \"Error! \".concat(error);\n    return __jsx(\"div\", null, __jsx(Card, {\n      title: props.title\n    }, console.log(data), __jsx(Stack, null, __jsx(Stack.Item, null, __jsx(Checkbox, {\n      label: \"Basic checkbox\",\n      checked: checked,\n      onChange: handleChange\n    }))), __jsx(TextField, {\n      value: props.field,\n      id: data.product.id,\n      ariaControls: data.product.id,\n      placeholder: !data.product.metafield ? \"No Threekit ID\" : data.product.metafield.value,\n      onChange: props.handleTKChange\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        return refetch();\n      }\n    }, \"Refetch!\")));\n  }));\n}\n\nexport default ThreekitForm;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/ThreekitForm.js"],"names":["React","useState","useCallback","Query","TextField","Card","Stack","TextStyle","Checkbox","ThreekitForm","props","checked","setChecked","handleChange","newChecked","query","id","loading","error","data","refetch","title","console","log","field","product","metafield","value","handleTKChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,QAA5C,QAA4D,kBAA5D;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AAD2B,kBAEGT,QAAQ,CAAC,KAAD,CAFX;AAAA,MAEpBU,OAFoB;AAAA,MAEXC,UAFW;;AAG3B,MAAMC,YAAY,GAAGX,WAAW,CAAC,UAAAY,UAAU;AAAA,WAAIF,UAAU,CAACE,UAAD,CAAd;AAAA,GAAX,EAAuC,EAAvC,CAAhC;AACA,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEJ,KAAK,CAACK,KADf;AAEE,IAAA,SAAS,EAAEL,KAAK,CAACM,EAFnB,CAGE;;AAHF,KAKG,gBAAuC;AAAA,QAApCC,OAAoC,QAApCA,OAAoC;AAAA,QAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,QAApBC,IAAoB,QAApBA,IAAoB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACtC,QAAIH,OAAJ,EAAa,OAAO,IAAP;AACb,QAAIC,KAAJ,EAAW,wBAAiBA,KAAjB;AAEX,WACE,mBACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAER,KAAK,CAACW;AAAnB,OACGC,OAAO,CAACC,GAAR,CAAYJ,IAAZ,CADH,EAEE,MAAC,KAAD,QAOE,MAAC,KAAD,CAAO,IAAP,QACE,MAAC,QAAD;AACE,MAAA,KAAK,EAAC,gBADR;AAEE,MAAA,OAAO,EAAER,OAFX;AAGE,MAAA,QAAQ,EAAEE;AAHZ,MADF,CAPF,CAFF,EAwBE,MAAC,SAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACc,KADf;AAEE,MAAA,EAAE,EAAEL,IAAI,CAACM,OAAL,CAAaT,EAFnB;AAGE,MAAA,YAAY,EAAEG,IAAI,CAACM,OAAL,CAAaT,EAH7B;AAIE,MAAA,WAAW,EACT,CAACG,IAAI,CAACM,OAAL,CAAaC,SAAd,GACI,gBADJ,GAEIP,IAAI,CAACM,OAAL,CAAaC,SAAb,CAAuBC,KAP/B;AASE,MAAA,QAAQ,EAAEjB,KAAK,CAACkB;AATlB,MAxBF,EAmCE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMR,OAAO,EAAb;AAAA;AAAjB,kBAnCF,CADF,CADF;AAyCD,GAlDH,CADF,CADF;AAwDD;;AAED,eAAeX,YAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { TextField, Card, Stack, TextStyle, Checkbox } from \"@shopify/polaris\";\nfunction ThreekitForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [checked, setChecked] = useState(false);\n  const handleChange = useCallback(newChecked => setChecked(newChecked), []);\n  return (\n    <div>\n      <Query\n        query={props.query}\n        variables={props.id}\n        // skip={!breed}\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n\n          return (\n            <div>\n              <Card title={props.title}>\n                {console.log(data)}\n                <Stack>\n                  {/* <Stack.Item fill>\n                    <h3>\n                      <TextStyle variation=\"strong\">{props.title}</TextStyle>\n                    </h3>\n                  </Stack.Item> */}\n\n                  <Stack.Item>\n                    <Checkbox\n                      label=\"Basic checkbox\"\n                      checked={checked}\n                      onChange={handleChange}\n                    />\n                    {/* <Checkbox\n                      label=\"Edit TK Details\"\n                      checked={props.checked}\n                      id={props.id}\n                      onChange={props.handleCheckChange}\n                    /> */}\n                  </Stack.Item>\n                </Stack>\n                {/* Catch the error for no IDS */}\n                <TextField\n                  value={props.field}\n                  id={data.product.id}\n                  ariaControls={data.product.id}\n                  placeholder={\n                    !data.product.metafield\n                      ? \"No Threekit ID\"\n                      : data.product.metafield.value\n                  }\n                  onChange={props.handleTKChange}\n                ></TextField>\n                <button onClick={() => refetch()}>Refetch!</button>\n              </Card>\n            </div>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default ThreekitForm;\n"]},"metadata":{},"sourceType":"module"}