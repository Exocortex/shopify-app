{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\nquery($id: ID!) {\\n  product(id: $id) {\\n    metafield(namespace: \\\"threekit\\\", key: \\\"assetid\\\") {\\n      value\\n      id\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: ProductInput!) {\\n    productUpdate(input: $input) {\\n      product {\\n        metafields(first: 100) {\\n          edges {\\n            node {\\n              id\\n              namespace\\n              key\\n              value\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast } from \"@shopify/polaris\";\nimport store from \"store-js\";\nimport gql from \"graphql-tag\";\nimport { Mutation, Query, useQuery } from \"react-apollo\";\nvar metaId = \"\";\nvar tktempid = \"\";\nvar UPDATE_PRICE = gql(_templateObject());\nvar GET_META_ID = gql(_templateObject2());\n\nvar EditProduct = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  function EditProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      tkid: \"\",\n      price: \"\",\n      variantId: \"\",\n      showToast: false,\n      metaId: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get(\"item\");\n      console.log(item);\n      var price = item.handle;\n      var variantId = item.id;\n      var discounter = price;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return discounter;\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        tkid: this.itemToBeConsumed()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          price = _this$state.price,\n          tkid = _this$state.tkid,\n          variantId = _this$state.variantId;\n\n      function getMeta(proId) {\n        var _useQuery = useQuery(GET_META_ID, {\n          variables: {\n            id: proId\n          }\n        }),\n            loading = _useQuery.loading,\n            error = _useQuery.error,\n            data = _useQuery.data;\n\n        if (loading) return null;\n        if (error) return \"Error! \".concat(error);\n        console.log(data);\n\n        if (data.product.metafield == null) {\n          return null;\n        } else {\n          metaId = data.product.metafield.id;\n          tktempid = data.product.metafield.value;\n          return data;\n        }\n\n        ;\n      }\n\n      console.log(this.state);\n      return __jsx(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n\n        var showError = error && __jsx(Banner, {\n          status: \"critical\"\n        }, error.message);\n\n        var showToast = data && data.productVariantUpdate && __jsx(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n\n        return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, showToast, __jsx(Layout.Section, null, showError), __jsx(Layout.Section, null, __jsx(DisplayText, {\n          size: \"large\"\n        }, name), __jsx(Form, null, __jsx(Card, {\n          sectioned: true\n        }, __jsx(\"p\", null, _JSON$stringify(getMeta(_this2.state.variantId))), __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n          prefix: \"Threekit Asset ID\",\n          value: getMeta(_this2.state.variantId).product.metafield.value,\n          onChange: _this2.handleChange(\"tkid\"),\n          label: \"Enter your Threekit Asset ID\",\n          type: \"text\"\n        })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n          primaryAction: [{\n            content: \"Save\",\n            onAction: function onAction() {\n              var productVariableInput;\n\n              if (metaId == \"\") {\n                productVariableInput = {\n                  id: _this2.state.variantId,\n                  metafields: [{\n                    namespace: \"threekit\",\n                    key: \"assetid\",\n                    value: _this2.state.tkid,\n                    valueType: \"STRING\"\n                  }]\n                };\n              } else {\n                productVariableInput = {\n                  id: _this2.state.variantId,\n                  metafields: [{\n                    namespace: \"threekit\",\n                    key: \"assetid\",\n                    value: _this2.state.tkid,\n                    valueType: \"STRING\",\n                    id: metaId\n                  }]\n                };\n              }\n\n              handleSubmit({\n                variables: {\n                  input: productVariableInput\n                }\n              });\n            }\n          }],\n          secondaryActions: [{\n            content: \"Remove discount\"\n          }]\n        }))))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","store","gql","Mutation","Query","useQuery","metaId","tktempid","UPDATE_PRICE","GET_META_ID","EditProduct","tkid","price","variantId","showToast","field","value","setState","item","get","console","log","handle","id","discounter","itemToBeConsumed","state","name","getMeta","proId","variables","loading","error","data","product","metafield","handleSubmit","showError","message","productVariantUpdate","handleChange","content","onAction","productVariableInput","metafields","namespace","key","valueType","input","React","Component"],"mappings":"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","sourcesContent":["import {\r\n  Banner,\r\n  Card,\r\n  DisplayText,\r\n  Form,\r\n  FormLayout,\r\n  Frame,\r\n  Layout,\r\n  Page,\r\n  PageActions,\r\n  TextField,\r\n  Toast\r\n} from \"@shopify/polaris\";\r\nimport store from \"store-js\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation, Query, useQuery } from \"react-apollo\";\r\n\r\nlet metaId = \"\";\r\nlet tktempid = \"\";\r\n\r\nconst UPDATE_PRICE = gql`\r\n  mutation($input: ProductInput!) {\r\n    productUpdate(input: $input) {\r\n      product {\r\n        metafields(first: 100) {\r\n          edges {\r\n            node {\r\n              id\r\n              namespace\r\n              key\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_META_ID = gql`\r\nquery($id: ID!) {\r\n  product(id: $id) {\r\n    metafield(namespace: \"threekit\", key: \"assetid\") {\r\n      value\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nclass EditProduct extends React.Component {\r\n  state = {\r\n    tkid: \"\",\r\n    price: \"\",\r\n    variantId: \"\",\r\n    showToast: false,\r\n    metaId: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ tkid: this.itemToBeConsumed() });\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { name, price, tkid, variantId } = this.state;\r\n\r\n\r\n    function getMeta(proId) {\r\n      const { loading, error, data } = useQuery(GET_META_ID, {\r\n        variables: {id: proId}\r\n      });\r\n\r\n      if (loading) return null;\r\n      if (error) return `Error! ${error}`;\r\n      console.log(data)\r\n      if(data.product.metafield == null) {return null} else{\r\n        metaId = data.product.metafield.id;\r\n        tktempid = data.product.metafield.value;\r\n        return data;\r\n      };\r\n \r\n    }\r\n    console.log(this.state)\r\n\r\n    return (\r\n      \r\n      <Mutation mutation={UPDATE_PRICE}>\r\n        {(handleSubmit, { error, data }) => {\r\n          const showError = error && (\r\n            <Banner status=\"critical\">{error.message}</Banner>\r\n          );\r\n          const showToast = data && data.productVariantUpdate && (\r\n            <Toast\r\n              content=\"Sucessfully updated\"\r\n              onDismiss={() => this.setState({ showToast: false })}\r\n            />\r\n          );\r\n\r\n\r\n          return (\r\n            <Frame>\r\n              <Page>\r\n                <Layout>\r\n                  {showToast}\r\n                  <Layout.Section>{showError}</Layout.Section>\r\n                  <Layout.Section>\r\n                    <DisplayText size=\"large\">{name}</DisplayText>\r\n                    <Form>\r\n                      <Card sectioned>\r\n                        <p>{JSON.stringify(getMeta(this.state.variantId))}</p>\r\n                        <FormLayout>\r\n                          <FormLayout.Group>\r\n                            <TextField\r\n                              prefix=\"Threekit Asset ID\"\r\n                              value={getMeta(this.state.variantId).product.metafield.value}\r\n                              onChange={this.handleChange(\"tkid\")}\r\n                              label=\"Enter your Threekit Asset ID\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormLayout.Group>\r\n                          <p>This sale price will expire in two weeks</p>\r\n                        </FormLayout>\r\n                      </Card>\r\n                      <PageActions\r\n                        primaryAction={[\r\n                          {\r\n                            content: \"Save\",\r\n                            onAction: () => {\r\n                              let productVariableInput;\r\n                              if (metaId == \"\"){\r\n                                productVariableInput = {\r\n                                  id: this.state.variantId,\r\n                                  metafields: [\r\n                                    {\r\n                                      namespace: \"threekit\",\r\n                                      key: \"assetid\",\r\n                                      value: this.state.tkid,\r\n                                      valueType: \"STRING\"\r\n                                    }\r\n                                  ]\r\n                                };\r\n                              } else {\r\n                                productVariableInput = {\r\n                                  id: this.state.variantId,\r\n                                  metafields: [\r\n                                    {\r\n                                      namespace: \"threekit\",\r\n                                      key: \"assetid\",\r\n                                      value: this.state.tkid,\r\n                                      valueType: \"STRING\",\r\n                                      id: metaId\r\n                                    }\r\n                                  ]\r\n                                };\r\n                              }\r\n                              \r\n                              handleSubmit({\r\n                                variables: { input: productVariableInput }\r\n                              });\r\n                            }\r\n                          }\r\n                        ]}\r\n                        secondaryActions={[\r\n                          {\r\n                            content: \"Remove discount\"\r\n                          }\r\n                        ]}\r\n                      />\r\n                    </Form>\r\n                  </Layout.Section>\r\n                </Layout>\r\n              </Page>\r\n            </Frame>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n\r\n  handleChange = field => {\r\n    return value => this.setState({ [field]: value });\r\n  };\r\n\r\n  itemToBeConsumed = () => {\r\n    const item = store.get(\"item\");\r\n    console.log(item);\r\n\r\n    const price = item.handle;\r\n    const variantId = item.id;\r\n    const discounter = price;\r\n    this.setState({ price, variantId });\r\n    return discounter;\r\n  };\r\n}\r\n\r\nexport default EditProduct;\r\n"]},"metadata":{},"sourceType":"module"}