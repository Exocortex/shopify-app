{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      query($id: ID!) {\\n        product(id: $id) {\\n          metafield(namespace: \\\"threekit1\\\", key: \\\"assetid\\\") {\\n            value\\n            id\\n          }\\n        }\\n      }\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation($input: ProductInput!) {\\n    productUpdate(input: $input) {\\n      product {\\n        metafields(first: 100) {\\n          edges {\\n            node {\\n              id\\n              namespace\\n              key\\n              value\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Banner, Card, DisplayText, Form, FormLayout, Frame, Layout, Page, PageActions, TextField, Toast } from \"@shopify/polaris\";\nimport store from \"store-js\";\nimport gql from \"graphql-tag\";\nimport { Mutation, Query, useQuery } from \"react-apollo\";\nvar UPDATE_PRICE = gql(_templateObject());\n\nvar EditProduct = /*#__PURE__*/function (_React$Component) {\n  _inherits(EditProduct, _React$Component);\n\n  function EditProduct() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EditProduct);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EditProduct)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      discount: \"\",\n      price: \"\",\n      variantId: \"\",\n      showToast: false,\n      metaId: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"itemToBeConsumed\", function () {\n      var item = store.get(\"item\");\n      console.log(item);\n      var price = item.handle;\n      var variantId = item.id;\n      var discounter = price;\n\n      _this.setState({\n        price: price,\n        variantId: variantId\n      });\n\n      return discounter;\n    });\n\n    return _this;\n  }\n\n  _createClass(EditProduct, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        discount: this.itemToBeConsumed()\n      });\n      console.log(\"variant id: \", this.state.variantId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          name = _this$state.name,\n          price = _this$state.price,\n          discount = _this$state.discount,\n          variantId = _this$state.variantId;\n      var GET_META_ID = gql(_templateObject2());\n      return __jsx(Mutation, {\n        mutation: UPDATE_PRICE\n      }, function (handleSubmit, _ref) {\n        var error = _ref.error,\n            data = _ref.data;\n\n        var showError = error && __jsx(Banner, {\n          status: \"critical\"\n        }, error.message);\n\n        var showToast = data && data.productVariantUpdate && __jsx(Toast, {\n          content: \"Sucessfully updated\",\n          onDismiss: function onDismiss() {\n            return _this2.setState({\n              showToast: false\n            });\n          }\n        });\n\n        function getMeta(proId) {\n          var _useQuery = useQuery(GET_META_ID, {\n            variables: {\n              id: proId\n            }\n          }),\n              loading = _useQuery.loading,\n              error = _useQuery.error,\n              data = _useQuery.data;\n\n          if (loading) return null;\n          if (error) return \"Error! \".concat(error);\n          console.log(data.product.metafield);\n          return data.product.metafield.id;\n        }\n\n        _this2.setState({\n          metaId: getMeta(_this2.state.variantId)\n        });\n\n        return __jsx(Frame, null, __jsx(Page, null, __jsx(Layout, null, showToast, __jsx(Layout.Section, null, showError), __jsx(Layout.Section, null, __jsx(DisplayText, {\n          size: \"large\"\n        }, name), __jsx(Form, null, __jsx(Card, {\n          sectioned: true\n        }, __jsx(\"p\", null, _JSON$stringify(getMeta(_this2.state.variantId))), __jsx(FormLayout, null, __jsx(FormLayout.Group, null, __jsx(TextField, {\n          prefix: \"$\",\n          value: price,\n          disabled: true,\n          label: \"Original price\",\n          type: \"price\"\n        }), __jsx(TextField, {\n          id: \"sendText\",\n          prefix: \"TKID\",\n          value: discount,\n          onChange: _this2.handleChange(\"discount\"),\n          label: \"Discounted price\",\n          type: \"text\"\n        })), __jsx(\"p\", null, \"This sale price will expire in two weeks\"))), __jsx(PageActions, {\n          primaryAction: [{\n            content: \"Save\",\n            onAction: function onAction() {\n              var productVariableInput = {\n                id: \"gid://shopify/Product/4713627418669\",\n                metafields: [{\n                  namespace: \"threekit1\",\n                  key: \"assetid\",\n                  value: _this2.state.discount,\n                  valueType: \"STRING\",\n                  id: _this2.state.metaId\n                }]\n              };\n              handleSubmit({\n                variables: {\n                  input: productVariableInput\n                }\n              });\n            }\n          }],\n          secondaryActions: [{\n            content: \"Remove discount\"\n          }]\n        }))))));\n      });\n    }\n  }]);\n\n  return EditProduct;\n}(React.Component);\n\nexport default EditProduct;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/pages/edit-products.js"],"names":["Banner","Card","DisplayText","Form","FormLayout","Frame","Layout","Page","PageActions","TextField","Toast","store","gql","Mutation","Query","useQuery","UPDATE_PRICE","EditProduct","discount","price","variantId","showToast","metaId","field","value","setState","item","get","console","log","handle","id","discounter","itemToBeConsumed","state","name","GET_META_ID","handleSubmit","error","data","showError","message","productVariantUpdate","getMeta","proId","variables","loading","product","metafield","handleChange","content","onAction","productVariableInput","metafields","namespace","key","valueType","input","React","Component"],"mappings":"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","sourcesContent":["import {\r\n  Banner,\r\n  Card,\r\n  DisplayText,\r\n  Form,\r\n  FormLayout,\r\n  Frame,\r\n  Layout,\r\n  Page,\r\n  PageActions,\r\n  TextField,\r\n  Toast\r\n} from \"@shopify/polaris\";\r\nimport store from \"store-js\";\r\nimport gql from \"graphql-tag\";\r\nimport { Mutation, Query, useQuery } from \"react-apollo\";\r\n\r\nconst UPDATE_PRICE = gql`\r\n  mutation($input: ProductInput!) {\r\n    productUpdate(input: $input) {\r\n      product {\r\n        metafields(first: 100) {\r\n          edges {\r\n            node {\r\n              id\r\n              namespace\r\n              key\r\n              value\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nclass EditProduct extends React.Component {\r\n  state = {\r\n    discount: \"\",\r\n    price: \"\",\r\n    variantId: \"\",\r\n    showToast: false,\r\n    metaId: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ discount: this.itemToBeConsumed() });\r\n    console.log(\"variant id: \", this.state.variantId);\r\n  }\r\n\r\n  render() {\r\n    const { name, price, discount, variantId } = this.state;\r\n\r\n    const GET_META_ID = gql`\r\n      query($id: ID!) {\r\n        product(id: $id) {\r\n          metafield(namespace: \"threekit1\", key: \"assetid\") {\r\n            value\r\n            id\r\n          }\r\n        }\r\n      }\r\n    `;\r\n\r\n    return (\r\n      <Mutation mutation={UPDATE_PRICE}>\r\n        {(handleSubmit, { error, data }) => {\r\n          const showError = error && (\r\n            <Banner status=\"critical\">{error.message}</Banner>\r\n          );\r\n          const showToast = data && data.productVariantUpdate && (\r\n            <Toast\r\n              content=\"Sucessfully updated\"\r\n              onDismiss={() => this.setState({ showToast: false })}\r\n            />\r\n          );\r\n\r\n          function getMeta(proId) {\r\n            const { loading, error, data } = useQuery(GET_META_ID, {\r\n              variables: {id: proId}\r\n            });\r\n\r\n            if (loading) return null;\r\n            if (error) return `Error! ${error}`;\r\n            console.log(data.product.metafield)\r\n            return data.product.metafield.id;\r\n          }\r\n          this.setState({metaId: getMeta(this.state.variantId)})\r\n          return (\r\n            <Frame>\r\n              <Page>\r\n                <Layout>\r\n                  {showToast}\r\n                  <Layout.Section>{showError}</Layout.Section>\r\n                  <Layout.Section>\r\n                    <DisplayText size=\"large\">{name}</DisplayText>\r\n                    <Form>\r\n                      <Card sectioned>\r\n                        <p>{JSON.stringify(getMeta(this.state.variantId))}</p>\r\n                        <FormLayout>\r\n                          <FormLayout.Group>\r\n                            <TextField\r\n                              prefix=\"$\"\r\n                              value={price}\r\n                              disabled\r\n                              label=\"Original price\"\r\n                              type=\"price\"\r\n                            />\r\n                            <TextField\r\n                              id=\"sendText\"\r\n                              prefix=\"TKID\"\r\n                              value={discount}\r\n                              onChange={this.handleChange(\"discount\")}\r\n                              label=\"Discounted price\"\r\n                              type=\"text\"\r\n                            />\r\n                          </FormLayout.Group>\r\n                          <p>This sale price will expire in two weeks</p>\r\n                        </FormLayout>\r\n                      </Card>\r\n                      <PageActions\r\n                        primaryAction={[\r\n                          {\r\n                            content: \"Save\",\r\n                            onAction: () => {\r\n                              const productVariableInput = {\r\n                                id: \"gid://shopify/Product/4713627418669\",\r\n                                metafields: [\r\n                                  {\r\n                                    namespace: \"threekit1\",\r\n                                    key: \"assetid\",\r\n                                    value: this.state.discount,\r\n                                    valueType: \"STRING\",\r\n                                    id: this.state.metaId\r\n                                  }\r\n                                ]\r\n                              };\r\n                              handleSubmit({\r\n                                variables: { input: productVariableInput }\r\n                              });\r\n                            }\r\n                          }\r\n                        ]}\r\n                        secondaryActions={[\r\n                          {\r\n                            content: \"Remove discount\"\r\n                          }\r\n                        ]}\r\n                      />\r\n                    </Form>\r\n                  </Layout.Section>\r\n                </Layout>\r\n              </Page>\r\n            </Frame>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    );\r\n  }\r\n\r\n  handleChange = field => {\r\n    return value => this.setState({ [field]: value });\r\n  };\r\n\r\n  itemToBeConsumed = () => {\r\n    const item = store.get(\"item\");\r\n    console.log(item);\r\n\r\n    const price = item.handle;\r\n    const variantId = item.id;\r\n    const discounter = price;\r\n    this.setState({ price, variantId });\r\n    return discounter;\r\n  };\r\n}\r\n\r\nexport default EditProduct;\r\n"]},"metadata":{},"sourceType":"module"}