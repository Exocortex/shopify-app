{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout, Page, TextStyle, EmptyState } from \"@shopify/polaris\";\nimport { ResourcePicker, TitleBar } from \"@shopify/app-bridge-react\";\nimport store from \"store-js\";\nimport ResourceListWithProducts from \"../components/ResourceList\";\nimport gql from \"graphql-tag\";\nimport { Mutation, Query, useQuery } from \"react-apollo\";\nconst GET_SHOP_NAME = gql`\n  query {\n    shop {\n      name\n    }\n  }\n`;\n\nconst getShop = () => __jsx(Query, {\n  query: GET_SHOP_NAME\n}, ({\n  loading,\n  error,\n  data\n}) => {\n  if (loading) console.log(\"Loading...\");\n  if (error) return console.log(error.message);\n  this.setState({\n    shop: data\n  });\n});\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false,\n      shop: ''\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const idsFromResources = resources.selection.map(product => product.id);\n      this.setState({\n        open: false\n      });\n      store.set(\"ids\", idsFromResources);\n    });\n  }\n\n  componentDidMount() {\n    console.log(state);\n    fetch(\"/admin/api/2020-01/script_tags.json\").then(response => {\n      console.log(response.json());\n    }).then(data => {\n      console.log(data);\n    });\n  }\n\n  render() {\n    const emptyState = !store.get(\"ids\");\n    return __jsx(Page, null, __jsx(TitleBar, {\n      primaryAction: {\n        content: \"Select products\"\n      }\n    }), __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      })\n    }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n      heading: \"Associate a Shopify product with a Threekit item.\",\n      action: {\n        content: \"Select products\",\n        onAction: () => this.setState({\n          open: true\n        })\n      },\n      image: \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\n    }, __jsx(\"p\", null, \"Select products to associate it with a Threekit item.\"))) : __jsx(ResourceListWithProducts, null));\n  }\n\n}\n\nexport default Index;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/pages/index.js"],"names":["Layout","Page","TextStyle","EmptyState","ResourcePicker","TitleBar","store","ResourceListWithProducts","gql","Mutation","Query","useQuery","GET_SHOP_NAME","getShop","loading","error","data","console","log","message","setState","shop","Index","React","Component","open","resources","idsFromResources","selection","map","product","id","set","componentDidMount","state","fetch","then","response","json","render","emptyState","get","content","handleSelection","onAction"],"mappings":"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","sourcesContent":["import { Layout, Page, TextStyle, EmptyState } from \"@shopify/polaris\";\r\nimport { ResourcePicker, TitleBar } from \"@shopify/app-bridge-react\";\r\nimport store from \"store-js\";\r\nimport ResourceListWithProducts from \"../components/ResourceList\";\r\nimport gql from \"graphql-tag\";\r\n\r\nimport { Mutation, Query, useQuery } from \"react-apollo\";\r\n\r\nconst GET_SHOP_NAME = gql`\r\n  query {\r\n    shop {\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nconst getShop = () => (\r\n  <Query query={GET_SHOP_NAME}>\r\n    {({ loading, error, data }) => {\r\n      if (loading) console.log(\"Loading...\");\r\n      if (error) return console.log(error.message);\r\n\r\n      this.setState({shop: data})\r\n    }}\r\n  </Query>\r\n);\r\n\r\nclass Index extends React.Component {\r\n  state = { \r\n    open: false,\r\n    shop: ''\r\n   };\r\n\r\n  componentDidMount() {\r\n    console.log(state);\r\n    \r\n    fetch(\"/admin/api/2020-01/script_tags.json\")\r\n      .then(response => {\r\n        console.log(response.json());\r\n      })\r\n      .then(data => {\r\n        console.log(data);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const emptyState = !store.get(\"ids\");\r\n  \r\n    return (\r\n      \r\n      <Page>\r\n        <TitleBar\r\n          primaryAction={{\r\n            content: \"Select products\"\r\n          }}\r\n        />\r\n        <ResourcePicker\r\n          resourceType=\"Product\"\r\n          showVariants={false}\r\n          open={this.state.open}\r\n          onSelection={resources => this.handleSelection(resources)}\r\n          onCancel={() => this.setState({ open: false })}\r\n        />\r\n        {emptyState ? (\r\n          <Layout>\r\n            <EmptyState\r\n              heading=\"Associate a Shopify product with a Threekit item.\"\r\n              action={{\r\n                content: \"Select products\",\r\n                onAction: () => this.setState({ open: true })\r\n              }}\r\n              image={\r\n                \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\r\n              }\r\n            >\r\n              <p>Select products to associate it with a Threekit item.</p>\r\n            </EmptyState>\r\n          </Layout>\r\n        ) : (\r\n          <ResourceListWithProducts />\r\n        )}\r\n      </Page>\r\n    );\r\n  }\r\n  handleSelection = resources => {\r\n    const idsFromResources = resources.selection.map(product => product.id);\r\n    this.setState({ open: false });\r\n    store.set(\"ids\", idsFromResources);\r\n  };\r\n}\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}