{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\n\nfunction ThreekitForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  return __jsx(\"div\", null, __jsx(Query, {\n    query: props.query,\n    variables: props.id // skip={!breed}\n\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data,\n        refetch = _ref.refetch;\n    if (loading) return null;\n    if (error) return \"Error! \".concat(error);\n    return __jsx(\"div\", null, console.log(data), __jsx(TextField, {\n      value: props.field,\n      id: data.product.id,\n      ariaControls: data.product.id,\n      placeholder: !data.product.metafield ? \"No Threekit ID\" : data.product.metafield.value,\n      onChange: props.handleTKChange\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        return refetch();\n      }\n    }, \"Refetch!\"));\n  }));\n}\n\nexport default ThreekitForm;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/ThreekitForm.js"],"names":["React","useState","Query","ThreekitForm","props","count","setCount","query","id","loading","error","data","refetch","console","log","field","product","metafield","value","handleTKChange"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AAD2B,kBAEDH,QAAQ,CAAC,CAAD,CAFP;AAAA,MAEpBI,KAFoB;AAAA,MAEbC,QAFa;;AAI3B,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEF,KAAK,CAACG,KADf;AAEE,IAAA,SAAS,EAAEH,KAAK,CAACI,EAFnB,CAGE;;AAHF,KAKG,gBAAuC;AAAA,QAApCC,OAAoC,QAApCA,OAAoC;AAAA,QAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,QAApBC,IAAoB,QAApBA,IAAoB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACtC,QAAIH,OAAJ,EAAa,OAAO,IAAP;AACb,QAAIC,KAAJ,EAAW,wBAAiBA,KAAjB;AAEX,WACE,mBACGG,OAAO,CAACC,GAAR,CAAYH,IAAZ,CADH,EAIE,MAAC,SAAD;AACE,MAAA,KAAK,EAAEP,KAAK,CAACW,KADf;AAEE,MAAA,EAAE,EAAEJ,IAAI,CAACK,OAAL,CAAaR,EAFnB;AAGE,MAAA,YAAY,EAAEG,IAAI,CAACK,OAAL,CAAaR,EAH7B;AAIE,MAAA,WAAW,EACT,CAACG,IAAI,CAACK,OAAL,CAAaC,SAAd,GACI,gBADJ,GAEIN,IAAI,CAACK,OAAL,CAAaC,SAAb,CAAuBC,KAP/B;AASE,MAAA,QAAQ,EAAEd,KAAK,CAACe;AATlB,MAJF,EAeE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMP,OAAO,EAAb;AAAA;AAAjB,kBAfF,CADF;AAmBD,GA5BH,CADF,CADF;AAkCD;;AAED,eAAeT,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Query } from \"react-apollo\";\n\nfunction ThreekitForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [count, setCount] = useState(0);\n\n  return (\n    <div>\n      <Query\n        query={props.query}\n        variables={props.id}\n        // skip={!breed}\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n\n          return (\n            <div>\n              {console.log(data)}\n\n              {/* Catch the error for no IDS */}\n              <TextField\n                value={props.field}\n                id={data.product.id}\n                ariaControls={data.product.id}\n                placeholder={\n                  !data.product.metafield\n                    ? \"No Threekit ID\"\n                    : data.product.metafield.value\n                }\n                onChange={props.handleTKChange}\n              ></TextField>\n              <button onClick={() => refetch()}>Refetch!</button>\n            </div>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default ThreekitForm;\n"]},"metadata":{},"sourceType":"module"}