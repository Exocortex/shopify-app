{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Layout, Page, TextStyle, EmptyState, Button } from \"@shopify/polaris\";\nimport { ResourcePicker, TitleBar, ResourceListWithProducts } from \"@shopify/app-bridge-react\";\nimport SnippetGen from \"../components/SnippetGen\";\nimport store from \"store-js\";\n\nclass SnippetGenerator extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      open: false\n    });\n\n    _defineProperty(this, \"handleSelection\", resources => {\n      const idsFromResources = resources.selection.map(product => product.id);\n      this.setState({\n        open: false\n      });\n      console.log(idsFromResources); // console.log(this._formatProductID(idsFromResources));\n      // this.makeShopMetafield(idsFromResources.map(x => x.split('Product/')[1]))\n\n      store.set(\"ids\", idsFromResources);\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const emptyState = !store.get(\"ids\");\n    return __jsx(Page, null, __jsx(TitleBar, {\n      primaryAction: {\n        content: \"Select products\",\n        onAction: () => this.setState({\n          open: true\n        })\n      }\n    }), __jsx(ResourcePicker, {\n      resourceType: \"Product\",\n      showVariants: false,\n      open: this.state.open,\n      onSelection: resources => this.handleSelection(resources),\n      onCancel: () => this.setState({\n        open: false\n      })\n    }), emptyState ? __jsx(Layout, null, __jsx(EmptyState, {\n      heading: \"Associate a Shopify product with a Threekit item.\",\n      action: {\n        content: \"Select products\",\n        onAction: () => this.setState({\n          open: true\n        })\n      },\n      image: \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\n    }, __jsx(\"p\", null, \"Select products to associate it with a Threekit item.\"))) : __jsx(\"div\", null, __jsx(ResourceListWithProducts, null)));\n  }\n\n}\n\nexport default SnippetGenerator;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/pages/snippet-generator.js"],"names":["Layout","Page","TextStyle","EmptyState","Button","ResourcePicker","TitleBar","ResourceListWithProducts","SnippetGen","store","SnippetGenerator","React","Component","open","resources","idsFromResources","selection","map","product","id","setState","console","log","set","componentDidMount","render","emptyState","get","content","onAction","state","handleSelection"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,UAAlC,EAA8CC,MAA9C,QAA4D,kBAA5D;AACA,SAASC,cAAT,EAAyBC,QAAzB,EAAmCC,wBAAnC,QAAmE,2BAAnE;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAGA,MAAMC,gBAAN,SAA+BC,KAAK,CAACC,SAArC,CAA+C;AAAA;AAAA;;AAAA,mCACrC;AACNC,MAAAA,IAAI,EAAE;AADA,KADqC;;AAAA,6CAiD3BC,SAAS,IAAI;AAC7B,YAAMC,gBAAgB,GAAGD,SAAS,CAACE,SAAV,CAAoBC,GAApB,CAAwBC,OAAO,IAAIA,OAAO,CAACC,EAA3C,CAAzB;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYP,gBAAZ,EAH6B,CAI7B;AACA;;AACAN,MAAAA,KAAK,CAACc,GAAN,CAAU,KAAV,EAAiBR,gBAAjB;AACD,KAxD4C;AAAA;;AAK7CS,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBC,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,CAACjB,KAAK,CAACkB,GAAN,CAAU,KAAV,CAApB;AAEA,WACI,MAAC,IAAD,QACE,MAAC,QAAD;AACE,MAAA,aAAa,EAAE;AACbC,QAAAA,OAAO,EAAE,iBADI;AAEbC,QAAAA,QAAQ,EAAE,MAAM,KAAKT,QAAL,CAAc;AAAEP,UAAAA,IAAI,EAAE;AAAR,SAAd;AAFH;AADjB,MADF,EAOE,MAAC,cAAD;AACE,MAAA,YAAY,EAAC,SADf;AAEE,MAAA,YAAY,EAAE,KAFhB;AAGE,MAAA,IAAI,EAAE,KAAKiB,KAAL,CAAWjB,IAHnB;AAIE,MAAA,WAAW,EAAEC,SAAS,IAAI,KAAKiB,eAAL,CAAqBjB,SAArB,CAJ5B;AAKE,MAAA,QAAQ,EAAE,MAAM,KAAKM,QAAL,CAAc;AAAEP,QAAAA,IAAI,EAAE;AAAR,OAAd;AALlB,MAPF,EAcGa,UAAU,GACT,MAAC,MAAD,QACE,MAAC,UAAD;AACE,MAAA,OAAO,EAAC,mDADV;AAEE,MAAA,MAAM,EAAE;AACNE,QAAAA,OAAO,EAAE,iBADH;AAENC,QAAAA,QAAQ,EAAE,MAAM,KAAKT,QAAL,CAAc;AAAEP,UAAAA,IAAI,EAAE;AAAR,SAAd;AAFV,OAFV;AAME,MAAA,KAAK,EACH;AAPJ,OAUE,yEAVF,CADF,CADS,GAgBT,mBACA,MAAC,wBAAD,OADA,CA9BJ,CADJ;AAsCD;;AAhD4C;;AA0D/C,eAAeH,gBAAf","sourcesContent":["import { Layout, Page, TextStyle, EmptyState, Button } from \"@shopify/polaris\";\nimport { ResourcePicker, TitleBar, ResourceListWithProducts } from \"@shopify/app-bridge-react\";\nimport SnippetGen from \"../components/SnippetGen\";\nimport store from \"store-js\";\n\n\nclass SnippetGenerator extends React.Component {\n  state = {\n    open: false\n  };\n\n  componentDidMount() {}\n\n  render() {\n    const emptyState = !store.get(\"ids\");\n \n    return (\n        <Page>\n          <TitleBar\n            primaryAction={{\n              content: \"Select products\",\n              onAction: () => this.setState({ open: true })\n            }}\n          />\n          <ResourcePicker\n            resourceType=\"Product\"\n            showVariants={false}\n            open={this.state.open}\n            onSelection={resources => this.handleSelection(resources)}\n            onCancel={() => this.setState({ open: false })}\n          />\n          {emptyState ? (\n            <Layout>\n              <EmptyState\n                heading=\"Associate a Shopify product with a Threekit item.\"\n                action={{\n                  content: \"Select products\",\n                  onAction: () => this.setState({ open: true })\n                }}\n                image={\n                  \"https://cdn.shopify.com/s/files/1/0757/9955/files/empty-state.svg\"\n                }\n              >\n                <p>Select products to associate it with a Threekit item.</p>\n              </EmptyState>\n            </Layout>\n          ) : (\n            <div>\n            <ResourceListWithProducts />\n  \n            </div>\n          )}\n        </Page>\n      );\n  }\n  handleSelection = resources => {\n    const idsFromResources = resources.selection.map(product => product.id);\n    this.setState({ open: false });\n    console.log(idsFromResources);\n    // console.log(this._formatProductID(idsFromResources));\n    // this.makeShopMetafield(idsFromResources.map(x => x.split('Product/')[1]))\n    store.set(\"ids\", idsFromResources);\n  };\n}\nexport default SnippetGenerator;\n"]},"metadata":{},"sourceType":"module"}