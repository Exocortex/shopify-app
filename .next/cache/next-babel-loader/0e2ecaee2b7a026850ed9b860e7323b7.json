{"ast":null,"code":"import _readOnlyError from \"@babel/runtime-corejs2/helpers/esm/readOnlyError\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { TextField, Card, Stack, TextStyle, Checkbox } from \"@shopify/polaris\";\n\nfunction ThreekitForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  var _useState = useState(false),\n      checked = _useState[0],\n      setChecked = _useState[1];\n\n  var handleChange = useCallback(function (newChecked) {\n    setChecked(newChecked);\n    console.log(\"test\");\n  }, []);\n  return __jsx(\"div\", null, __jsx(Query, {\n    query: props.query,\n    variables: props.id // skip={!breed}\n\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data,\n        refetch = _ref.refetch;\n    if (loading) return null;\n    if (error) return \"Error! \".concat(error);\n    return __jsx(\"div\", null, console.log(data), !data ? \"\" : checked = (_readOnlyError(\"checked\"), useState(true)), __jsx(Stack, null, __jsx(Stack.Item, {\n      fill: true\n    }, __jsx(\"h3\", null, __jsx(TextStyle, {\n      variation: \"strong\"\n    }, props.title)), __jsx(Checkbox, {\n      label: \"Edit TK info\",\n      checked: checked,\n      onChange: handleChange\n    }))), !checked ? \"Please select a product \" : __jsx(TextField, {\n      value: props.field,\n      id: data.product.id,\n      ariaControls: data.product.id,\n      placeholder: !data.product.metafield ? \"No Threekit ID\" : data.product.metafield.value,\n      onChange: props.handleTKChange\n    }));\n  }));\n}\n\nexport default ThreekitForm;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/ThreekitForm.js"],"names":["React","useState","useCallback","Query","TextField","Card","Stack","TextStyle","Checkbox","ThreekitForm","props","checked","setChecked","handleChange","newChecked","console","log","query","id","loading","error","data","refetch","title","field","product","metafield","value","handleTKChange"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,QAA5C,QAA4D,kBAA5D;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AAD2B,kBAEGT,QAAQ,CAAC,KAAD,CAFX;AAAA,MAEpBU,OAFoB;AAAA,MAEXC,UAFW;;AAG3B,MAAMC,YAAY,GAAGX,WAAW,CAAC,UAAAY,UAAU,EAAI;AAC7CF,IAAAA,UAAU,CAACE,UAAD,CAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,GAH+B,EAG7B,EAH6B,CAAhC;AAIA,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEN,KAAK,CAACO,KADf;AAEE,IAAA,SAAS,EAAEP,KAAK,CAACQ,EAFnB,CAGE;;AAHF,KAKG,gBAAuC;AAAA,QAApCC,OAAoC,QAApCA,OAAoC;AAAA,QAA3BC,KAA2B,QAA3BA,KAA2B;AAAA,QAApBC,IAAoB,QAApBA,IAAoB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACtC,QAAIH,OAAJ,EAAa,OAAO,IAAP;AACb,QAAIC,KAAJ,EAAW,wBAAiBA,KAAjB;AACX,WACE,mBAEGL,OAAO,CAACC,GAAR,CAAYK,IAAZ,CAFH,EAGG,CAACA,IAAD,GAAQ,EAAR,GAAaV,OAAO,+BAAGV,QAAQ,CAAC,IAAD,CAAX,CAHvB,EAIE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,MAAA,IAAI;AAAhB,OACE,kBACE,MAAC,SAAD;AAAW,MAAA,SAAS,EAAC;AAArB,OAA+BS,KAAK,CAACa,KAArC,CADF,CADF,EAIE,MAAC,QAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,OAAO,EAAEZ,OAFX;AAGE,MAAA,QAAQ,EAAEE;AAHZ,MAJF,CADF,CAJF,EAiBG,CAACF,OAAD,GACC,0BADD,GAGC,MAAC,SAAD;AACE,MAAA,KAAK,EAAED,KAAK,CAACc,KADf;AAEE,MAAA,EAAE,EAAEH,IAAI,CAACI,OAAL,CAAaP,EAFnB;AAGE,MAAA,YAAY,EAAEG,IAAI,CAACI,OAAL,CAAaP,EAH7B;AAIE,MAAA,WAAW,EACT,CAACG,IAAI,CAACI,OAAL,CAAaC,SAAd,GACI,gBADJ,GAEIL,IAAI,CAACI,OAAL,CAAaC,SAAb,CAAuBC,KAP/B;AASE,MAAA,QAAQ,EAAEjB,KAAK,CAACkB;AATlB,MApBJ,CADF;AAsCD,GA9CH,CADF,CADF;AAoDD;;AAED,eAAenB,YAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { TextField, Card, Stack, TextStyle, Checkbox } from \"@shopify/polaris\";\nfunction ThreekitForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [checked, setChecked] = useState(false);\n  const handleChange = useCallback(newChecked => {\n    setChecked(newChecked);\n    console.log(\"test\");\n  }, []);\n  return (\n    <div>\n      <Query\n        query={props.query}\n        variables={props.id}\n        // skip={!breed}\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n          return (\n            <div>\n              {/* <Card title={props.title}> */}\n              {console.log(data)}\n              {!data ? \"\" : checked = useState(true)}\n              <Stack>\n                <Stack.Item fill>\n                  <h3>\n                    <TextStyle variation=\"strong\">{props.title}</TextStyle>\n                  </h3>\n                  <Checkbox\n                    label=\"Edit TK info\"\n                    checked={checked}\n                    onChange={handleChange}\n                  />\n                </Stack.Item>\n              </Stack>\n              {/* Catch the error for no IDS */}\n              {!checked ? (\n                \"Please select a product \"\n              ) : (\n                <TextField\n                  value={props.field}\n                  id={data.product.id}\n                  ariaControls={data.product.id}\n                  placeholder={\n                    !data.product.metafield\n                      ? \"No Threekit ID\"\n                      : data.product.metafield.value\n                  }\n                  onChange={props.handleTKChange}\n                ></TextField>\n              )}\n\n              {/* <button onClick={() => refetch()}>Refetch!</button> */}\n              {/* </Card> */}\n            </div>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default ThreekitForm;\n"]},"metadata":{},"sourceType":"module"}