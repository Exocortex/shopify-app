{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { SkeletonPage, TextContainer, TextField, Button, Modal } from \"@shopify/polaris\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nfunction SnippetGen(props) {\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n\n  const createSnippet = function (token) {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n\n    __jsx(Query, {\n      query: GET_TK_TOKEN,\n      onCompleted: data => setValue(createSnippet(!data.shop.metafield ? \"no token\" : data.shop.metafield.value))\n    }, ({\n      loading,\n      error,\n      data,\n      refetch\n    }) => {\n      if (loading) return null;\n      if (error) return `Error! ${error}`;\n      return __jsx(Modal, {\n        open: props.active,\n        onClose: props.handleChange,\n        title: props.title,\n        primaryAction: {\n          content: \"Copy to clipboard\",\n          onAction: props.handleChange\n        }\n      }, __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(\"p\", null, \"Copy and paste the HTML to embed a Threekit player with the selected product. Use it on blog posts, home pages, or anywhere HTML input is supported.\"))), __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(TextField, {\n        multiline: true,\n        value: value\n      }))));\n    });\n\n    return `<div id=\"tkplayer-${newTitle}\" style=\"height: 500px; width: 500px;\">\n        <script>\n                window.threekitPlayer({\n                authToken: \"${token}\",\n                el: document.getElementById(\"tkplayer-${newTitle}\"),\n                assetId: '${props.assetid}',\n                showConfigurator: false,\n                showAR: ${props.ar}\n              })\n              .then(async api => {\n                 window.player = api;\n                 window.configurator = await api.getConfigurator();\n          });\n        </script>`;\n  };\n\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  return __jsx(\"div\", null, __jsx(Query, {\n    query: GET_TK_TOKEN,\n    onCompleted: data => setValue(createSnippet(!data.shop.metafield ? \"no token\" : data.shop.metafield.value))\n  }, ({\n    loading,\n    error,\n    data,\n    refetch\n  }) => {\n    if (loading) return null;\n    if (error) return `Error! ${error}`;\n    return __jsx(Modal, {\n      open: props.active,\n      onClose: props.handleChange,\n      title: props.title,\n      primaryAction: {\n        content: \"Copy to clipboard\",\n        onAction: props.handleChange\n      }\n    }, __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(\"p\", null, \"Copy and paste the HTML to embed a Threekit player with the selected product. Use it on blog posts, home pages, or anywhere HTML input is supported.\"))), __jsx(Modal.Section, null, __jsx(TextContainer, null, __jsx(TextField, {\n      multiline: true,\n      value: value\n    }))));\n  }));\n}\n\nexport default SnippetGen;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/SnippetGen.js"],"names":["React","useState","useEffect","SkeletonPage","TextContainer","TextField","Button","Modal","Query","Mutation","gql","SnippetGen","props","GET_TK_TOKEN","createSnippet","token","newTitle","title","replace","data","setValue","shop","metafield","value","loading","error","refetch","active","handleChange","content","onAction","assetid","ar"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  SkeletonPage,\n  TextContainer,\n  TextField,\n  Button,\n  Modal,\n} from \"@shopify/polaris\";\nimport { Query, Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nfunction SnippetGen(props) {\n  const GET_TK_TOKEN = gql`\n    query {\n      shop {\n        metafield(namespace: \"threekit\", key: \"token\") {\n          id\n          value\n        }\n      }\n    }\n  `;\n\n  const createSnippet = function (token) {\n    let newTitle = props.title.replace(/\\s/g, \"\");\n    <Query\n      query={GET_TK_TOKEN}\n      onCompleted={(data) =>\n        setValue(\n          createSnippet(\n            !data.shop.metafield ? \"no token\" : data.shop.metafield.value\n          )\n        )\n      }\n    >\n      {({ loading, error, data, refetch }) => {\n        if (loading) return null;\n        if (error) return `Error! ${error}`;\n\n        return (\n          <Modal\n            open={props.active}\n            onClose={props.handleChange}\n            title={props.title}\n            primaryAction={{\n              content: \"Copy to clipboard\",\n              onAction: props.handleChange,\n            }}\n          >\n            <Modal.Section>\n              <TextContainer>\n                <p>\n                  Copy and paste the HTML to embed a Threekit player with the\n                  selected product. Use it on blog posts, home pages, or\n                  anywhere HTML input is supported.\n                </p>\n              </TextContainer>\n            </Modal.Section>\n            <Modal.Section>\n              <TextContainer>\n                <TextField multiline value={value} />\n              </TextContainer>\n            </Modal.Section>\n          </Modal>\n        );\n      }}\n    </Query>;\n    return `<div id=\"tkplayer-${newTitle}\" style=\"height: 500px; width: 500px;\">\n        <script>\n                window.threekitPlayer({\n                authToken: \"${token}\",\n                el: document.getElementById(\"tkplayer-${newTitle}\"),\n                assetId: '${props.assetid}',\n                showConfigurator: false,\n                showAR: ${props.ar}\n              })\n              .then(async api => {\n                 window.player = api;\n                 window.configurator = await api.getConfigurator();\n          });\n        </script>`;\n  };\n  const [value, setValue] = useState(\"\");\n\n\n  return (\n    <div>\n      <Query\n        query={GET_TK_TOKEN}\n        onCompleted={(data) =>\n          setValue(\n            createSnippet(\n              !data.shop.metafield ? \"no token\" : data.shop.metafield.value\n            )\n          )\n        }\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n\n          return (\n            <Modal\n              open={props.active}\n              onClose={props.handleChange}\n              title={props.title}\n              primaryAction={{\n                content: \"Copy to clipboard\",\n                onAction: props.handleChange,\n              }}\n            >\n              <Modal.Section>\n                <TextContainer>\n                  <p>\n                    Copy and paste the HTML to embed a Threekit player with the\n                    selected product. Use it on blog posts, home pages, or\n                    anywhere HTML input is supported.\n                  </p>\n                </TextContainer>\n              </Modal.Section>\n              <Modal.Section>\n                <TextContainer>\n                  <TextField multiline value={value} />\n                </TextContainer>\n              </Modal.Section>\n            </Modal>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default SnippetGen;\n"]},"metadata":{},"sourceType":"module"}