{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useCallback } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { TextField, Card, Stack, TextStyle, Checkbox } from \"@shopify/polaris\";\n\nfunction ThreekitForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const {\n    0: value,\n    1: setValue\n  } = useState('No Threekit ID');\n  const handleChange = useCallback(newValue => setValue(newValue), []);\n\n  const getID = td => setValue(id);\n\n  return __jsx(\"div\", null, __jsx(Query, {\n    query: props.query,\n    variables: props.id // skip={!breed}\n\n  }, ({\n    loading,\n    error,\n    data,\n    refetch\n  }) => {\n    if (loading) return null;\n    if (error) return `Error! ${error}`;\n    getID(!data.product.metafield ? \"No Threekit ID\" : data.product.metafield.value);\n    return __jsx(\"div\", null, console.log(data), __jsx(Stack, null, __jsx(Stack.Item, {\n      fill: true\n    }, __jsx(\"h3\", null, __jsx(TextStyle, {\n      variation: \"strong\"\n    }, props.title)))), __jsx(TextField, {\n      value: value,\n      onChange: handleChange,\n      id: data.product.id,\n      ariaControls: data.product.id,\n      placeholder: !data.product.metafield ? \"No Threekit ID\" : data.product.metafield.value\n    }));\n  }));\n}\n\nexport default ThreekitForm;","map":{"version":3,"sources":["/Users/willthompson/Documents/ThreeKit/Shopify/shopify-tutorial/components/ThreekitForm.js"],"names":["React","useState","useCallback","Query","TextField","Card","Stack","TextStyle","Checkbox","ThreekitForm","props","value","setValue","handleChange","newValue","getID","td","id","query","loading","error","data","refetch","product","metafield","console","log","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4CC,QAA5C,QAA4D,kBAA5D;;AACA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAAC,gBAAD,CAAlC;AAEA,QAAMY,YAAY,GAAGX,WAAW,CAAEY,QAAD,IAAcF,QAAQ,CAACE,QAAD,CAAvB,EAAmC,EAAnC,CAAhC;;AACA,QAAMC,KAAK,GAAIC,EAAD,IAAQJ,QAAQ,CAACK,EAAD,CAA9B;;AACA,SACE,mBACE,MAAC,KAAD;AACE,IAAA,KAAK,EAAEP,KAAK,CAACQ,KADf;AAEE,IAAA,SAAS,EAAER,KAAK,CAACO,EAFnB,CAGE;;AAHF,KAKG,CAAC;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA,IAAlB;AAAwBC,IAAAA;AAAxB,GAAD,KAAuC;AACtC,QAAIH,OAAJ,EAAa,OAAO,IAAP;AACb,QAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAM,EAAvB;AACXL,IAAAA,KAAK,CAAC,CAACM,IAAI,CAACE,OAAL,CAAaC,SAAd,GAA0B,gBAA1B,GAA6CH,IAAI,CAACE,OAAL,CAAaC,SAAb,CAAuBb,KAArE,CAAL;AACA,WACE,mBAEGc,OAAO,CAACC,GAAR,CAAYL,IAAZ,CAFH,EAIE,MAAC,KAAD,QACE,MAAC,KAAD,CAAO,IAAP;AAAY,MAAA,IAAI;AAAhB,OACE,kBACE,MAAC,SAAD;AAAW,MAAA,SAAS,EAAC;AAArB,OAA+BX,KAAK,CAACiB,KAArC,CADF,CADF,CADF,CAJF,EAeI,MAAC,SAAD;AACE,MAAA,KAAK,EAAEhB,KADT;AAEE,MAAA,QAAQ,EAAEE,YAFZ;AAGE,MAAA,EAAE,EAAEQ,IAAI,CAACE,OAAL,CAAaN,EAHnB;AAIE,MAAA,YAAY,EAAEI,IAAI,CAACE,OAAL,CAAaN,EAJ7B;AAKE,MAAA,WAAW,EACT,CAACI,IAAI,CAACE,OAAL,CAAaC,SAAd,GACI,gBADJ,GAEIH,IAAI,CAACE,OAAL,CAAaC,SAAb,CAAuBb;AAR/B,MAfJ,CADF;AAkCD,GA3CH,CADF,CADF;AAiDD;;AAED,eAAeF,YAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport { Query } from \"react-apollo\";\nimport { TextField, Card, Stack, TextStyle, Checkbox } from \"@shopify/polaris\";\nfunction ThreekitForm(props) {\n  // Declare a new state variable, which we'll call \"count\"\n  const [value, setValue] = useState('No Threekit ID');\n\n  const handleChange = useCallback((newValue) => setValue(newValue), []);\n  const getID = (td) => setValue(id);\n  return (\n    <div>\n      <Query\n        query={props.query}\n        variables={props.id}\n        // skip={!breed}\n      >\n        {({ loading, error, data, refetch }) => {\n          if (loading) return null;\n          if (error) return `Error! ${error}`;\n          getID(!data.product.metafield ? \"No Threekit ID\" : data.product.metafield.value)\n          return (\n            <div>\n              {/* <Card title={props.title}> */}\n              {console.log(data)}\n        \n              <Stack>\n                <Stack.Item fill>\n                  <h3>\n                    <TextStyle variation=\"strong\">{props.title}</TextStyle>\n                  </h3>\n             \n  \n                </Stack.Item>\n              </Stack>\n              {/* Catch the error for no IDS */}\n             \n                <TextField\n                  value={value} \n                  onChange={handleChange}\n                  id={data.product.id}\n                  ariaControls={data.product.id}\n                  placeholder={\n                    !data.product.metafield\n                      ? \"No Threekit ID\"\n                      : data.product.metafield.value\n                  }\n                  \n                ></TextField>\n             \n\n              {/* <button onClick={() => refetch()}>Refetch!</button> */}\n              {/* </Card> */}\n            </div>\n          );\n        }}\n      </Query>\n    </div>\n  );\n}\n\nexport default ThreekitForm;\n"]},"metadata":{},"sourceType":"module"}